{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["options","octokit","Octokit","getGithubProject","issue","components","repository_url","split","_components$slice","slice","length","_components$slice2","Object","slicedToArray","owner","repo","processIssue","_callee2","progress","regenerator_default","a","wrap","_context2","prev","next","undefined","state","abrupt","url","labels","map","label","color","name","number","assignees","stop","establishDeliveryDate","deliveryDate","milestone","due_on","Date","Math","max","getState","assignee","getType","includes","_arr","_i","priority","concat","template","todo","issues","p1bugs","p2bugs","p3bugs","others","wip","done","getFeature","_callee4","searchRepos","searchString","repos","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_context4","join","search","issuesAndPullRequests","endpoint","merge","q","Symbol","iterator","value","t0","return","finish","paginate","then","_ref","asyncToGenerator","mark","_callee3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","project","repoName","type","_context3","t1","sent","push","call","t2","values","_x4","apply","this","arguments","query","queryString","parse","window","location","FeatureTagRow","repoFeature","counted","completed","reduce","b","total","toFixed","filter","toConsumableArray","Set","login","advanced","item","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","searchCriteria","err","searchUrl","assigneesFilter","getAssigneesFilter","issueNumbers","x","console","log","react_default","createElement","href","target","rel","title","props","className","makeLink","dateFormat","calculatePercentCompleted","Component","FeatureTag","feature","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop","_iterator2","rows","App_FeatureTagRow","key","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","Array","isArray","document","setState","App_FeatureTag","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29d86ea8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport dateFormat from 'dateformat';\nimport Octokit from '@octokit/rest';\nimport queryString from 'query-string';\nimport './App.css';\n\nconst TOKEN = ''; /* Github personal access token goes here (for now) */\n\nlet options = {};\nif (TOKEN) {\n    options = {\n        auth: 'token ' + TOKEN\n    }\n}\n\nconst octokit = new Octokit(options);\n\nfunction getGithubProject(issue) {\n    let components = issue.repository_url.split('/');\n    let [owner, repo] = components.slice(components.length - 2);\n    return {\n        owner: owner,\n        repo: repo\n    }\n}\n\nasync function processIssue(issue) {\n    let progress = undefined;\n    if (issue.state !== 'closed') {\n        progress = 'n/a' /* await getTaskCount(issue); */ // This should be lazy-loaded.\n    }\n\n    return {\n        url: issue.url,\n        labels: issue.labels.map(label => {\n            return {\n                color: label.color,\n                name: label.name\n            }\n        }),\n        progress: progress,\n        number: issue.number,\n        assignees: issue.assignees\n    }\n}\n\n/*\nasync function getTaskCount(issue) {\n    let githubProject = getGithubProject(issue);\n    let options = octokit.issues.listComments.endpoint.merge({\n        owner: githubProject.owner,\n        repo: githubProject.repo,\n        number: issue.number\n    });\n    let comments = await octokit.paginate(options);\n    comments = comments.map(comment => comment.body);\n    comments.unshift(issue.body);\n    comments = comments.join(\"\\n\").split(/\\r?\\n/)\n    let completed = comments.filter(comment => comment.trim().toLowerCase().startsWith('- [x]')).length;\n    let outstanding = comments.filter(comment => comment.trim().startsWith('- [ ]')).length;\n    return {\n        completed: completed,\n        outstanding: outstanding\n    }\n}\n*/\n\nfunction establishDeliveryDate(issue, deliveryDate) {\n    if (deliveryDate === null) {\n        return null;\n    }\n    else if (issue.milestone && issue.milestone.due_on) {\n        if (deliveryDate === undefined) {\n            return new Date(issue.milestone.due_on);\n        }\n        else {\n            return Math.max(deliveryDate, new Date(issue.milestone.due_on));\n        }\n    }\n    else {\n        return null;\n    }\n}\n\nfunction getState(issue) {\n    if (issue.state === 'closed') {\n        return 'done';\n    }\n    else if (issue.state === 'open' && (\n            issue.assignees.length === 0 ||\n            issue.assignee === undefined)\n    ) {\n        return 'todo';\n    }\n    else return 'wip';\n}\n\nfunction getType(issue) {\n    let labels = issue.labels.map(label => label.name);\n    if (labels.includes('bug')) {\n        for (const priority of ['p1', 'p2', 'p3']) {\n            if (labels.includes(priority)) {\n                return `${priority}bugs`;\n            }\n        }\n    }\n    else if (labels.includes('feature')) {\n        return 'issues';\n    }\n    return 'others';\n}\n\nfunction template(label, repo) {\n    return {\n        label: label,\n        repo: repo,\n        deliveryDate: undefined,\n        todo: {\n            issues: [],\n            p1bugs: [],\n            p2bugs: [],\n            p3bugs: [],\n            others: []\n        },\n        wip: {\n            issues: [],\n            p1bugs: [],\n            p2bugs: [],\n            p3bugs: [],\n            others: []\n        },\n        done: {\n            issues: [],\n            p1bugs: [],\n            p2bugs: [],\n            p3bugs: [],\n            others: []\n        }\n    };\n}\n\nasync function getFeature(label, searchRepos) {\n    let searchString = searchRepos.map(repo => 'repo:' + repo).join(' ') + ' label:' + label + ' is:issue';\n    const options = octokit.search.issuesAndPullRequests.endpoint.merge({\n        q: searchString\n    });\n\n    const repos = {};\n    for (const repo of searchRepos) {\n        repos[repo] = template(label, repo);\n    }\n\n    return await octokit.paginate(options)\n    .then(async(issues) => {\n        for (const issue of issues) {\n            const project = getGithubProject(issue);\n            const repoName = `${project.owner}/${project.repo}`\n            const repo = repos[repoName];\n\n            let state = getState(issue);\n            let type = getType(issue);\n\n            repo[state][type].push(await processIssue(issue));\n            if (state !== 'done' && ['issues', 'p1bugs'].includes(type)) {\n                repo.deliveryDate = establishDeliveryDate(issue, repo.deliveryDate);\n            }\n\n        }\n        return {\n            label: label,\n            repos: Object.values(repos)\n        }\n    });\n}\n\nlet query = queryString.parse(window.location.search);\n\nclass FeatureTagRow extends Component {\n    calculatePercentCompleted(repoFeature) {\n        let counted = ['issues', 'p1bugs'];\n\n        let completed = counted.map(type => repoFeature.done[type].length).reduce((a, b) => a + b);\n        let total = counted.map(type =>\n            repoFeature.todo[type].length +\n            repoFeature.wip[type].length +\n            repoFeature.done[type].length).reduce((a, b) => a + b, 0);\n\n        if (total === 0) {\n            return '~';\n        }\n        return (completed / total * 100).toFixed(0);\n    }\n\n    getAssigneesFilter(issues) {\n        /* TODO: There's a bug if you search WIP of 0, because it doesn't add any assignees to the filter (and returns\n         * > 0 results). We really need a makeWIPLink method that returns no link at all if there are no items in flight.\n         * */\n        let filter = [...new Set(issues.map(issue => issue.assignees.map(assignee => assignee.login))\n            .reduce((a, b) => a.concat(b), []))]\n            .map(assignee => `assignee:${assignee}`)\n            .join('+');\n        if (!filter) {\n            filter = 'no:assignee';\n        }\n        return filter;\n    }\n\n    makeLink(repo, label, q, issues) {\n        if (!q) {\n            q = []\n        }\n        let advanced = false;\n\n        if (q.filter(item => item.join('-') === 'assignee-*').length > 0) {\n            /* If the list of labels includes ['assignee', '*'], we'll strip it from the\n             * list and implement our search link using github's _advanced_ search\n             * functionality instead. This is because assignee:* doesn't reliably work\n             * with regular search (or advanced), so instead we have to apply the other\n             * search criteria _and_ a list of assignee:x where x all the assignees of\n             * all the issues which have assignees. Is that clear? Good, great. */\n            q = q.filter(item => item.join('-') !== 'assignee-*');\n            advanced = true;\n        }\n        q.push(['label', label]);\n\n        let query = [];\n        for (const searchCriteria of q) {\n            query.push(`${searchCriteria[0]}%3A${searchCriteria[1]}`)\n        }\n        let queryString = query.join('+');\n\n        let searchUrl = \"\";\n        if (advanced) {\n            let assigneesFilter = this.getAssigneesFilter(issues);\n            searchUrl = `https://github.com/search?utf8=%E2%9C%93&q=repo%3A${repo}+${queryString}+${assigneesFilter}&type=Issues&ref=advsearch&l=&l=+`;\n        }\n        else {\n            searchUrl = `https://github.com/${repo}/issues?utf8=%E2%9C%93&q=${queryString}`;\n        }\n\n        let issueNumbers = issues.map(x => `#${x.number}`).reduce((a, b) => a.concat(b), []);\n        if (issues.length > 0) {\n            console.log(issues);\n        }\n        return (\n            <a href={ searchUrl } target=\"_blank\" rel=\"noopener noreferrer\" title={ issueNumbers.join(\"\\n\") }>\n                { issueNumbers.length }\n            </a>\n        );\n    }\n\n    render() {\n        let repoFeature = this.props.repoFeature;\n\n        return (\n            <div className=\"FeatureTag-Row\">\n                <div>{ repoFeature.repo }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        [\n                            ['is', 'open'],\n                            ['no', 'assignee'],\n                            ['label', 'feature']\n                        ],\n                        repoFeature.todo.issues\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        [\n                            ['is', 'open'],\n                            ['assignee', '*'],\n                            ['label', 'feature']\n                        ],\n                        repoFeature.wip.issues\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        [\n                            ['is', 'closed'],\n                            ['label', 'feature']\n                        ],\n                        repoFeature.done.issues\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        [\n                            ['is', 'open'],\n                            ['no', 'assignee'],\n                            ['label', 'bug'],\n                            ['label', 'p1']\n                        ],\n                        repoFeature.todo.p1bugs\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        [\n                            ['is', 'open'],\n                            ['no', 'assignee'],\n                            ['label', 'bug'],\n                            ['label', 'p2']\n                        ],\n                        repoFeature.todo.p2bugs\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        [\n                            ['is', 'open'],\n                            ['no', 'assignee'],\n                            ['label', 'bug'],\n                            ['label', 'p3']\n                        ],\n                        repoFeature.todo.p3bugs\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        [\n                            ['is', 'open'],\n                            ['assignee', '*'],\n                            ['label', 'bug'],\n                        ],\n                        repoFeature.wip.p1bugs.concat(repoFeature.wip.p2bugs).concat(repoFeature.wip.p3bugs)\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        [\n                            ['is', 'closed'],\n                            ['label', 'bug'],\n                        ],\n                        repoFeature.done.p1bugs.concat(repoFeature.done.p2bugs).concat(repoFeature.done.p3bugs)\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        [\n                            ['is', 'open'],\n                            ['-label', 'feature'],\n                            ['-label', 'bug'],\n                            ['-label', 'p1'],\n                            ['-label', 'p2'],\n                            ['-label', 'p3'],\n                        ],\n                        repoFeature.todo.others.concat(repoFeature.wip.others)\n                    )\n                }</div>\n                <div className={ repoFeature.deliveryDate ? \"\" : \"NoDate\" }>{ repoFeature.deliveryDate ?\n                        dateFormat(repoFeature.deliveryDate, 'yyyy-mm-dd') :\n                    'n/a' }</div>\n                <div className=\"Completed\">{ this.calculatePercentCompleted(repoFeature) }%</div>\n            </div>\n        );\n    }\n}\n\nclass FeatureTag extends Component {\n    calculatePercentCompleted(feature) {\n        let counted = ['issues', 'p1bugs'];\n\n        let completed = 0;\n        let total = 0;\n\n        for (const repoFeature of feature.repos) {\n            completed += counted.map(type => repoFeature.done[type].length).reduce((a, b) => a + b);\n            total += counted.map(type => \n                repoFeature.todo[type].length +\n                repoFeature.wip[type].length +\n                repoFeature.done[type].length).reduce((a, b) => a + b, 0);\n        }\n\n        if (total === 0) {\n            return \"~\";\n        }\n        return (completed / total * 100).toFixed(0);\n    }\n\n    render() {\n        let rows = this.props.feature.repos.map(repo => <FeatureTagRow repoFeature={ repo } key={ repo.repo }/>);\n\n        return (\n            <div className=\"FeatureTag\">\n                <div className=\"FeatureTag-Header\">\n                    <div className=\"Label\">{ this.props.feature.label }</div>\n                    <div className=\"PercentComplete\">{ this.calculatePercentCompleted(this.props.feature) }%</div>\n                </div>\n                <div className=\"FeatureTag-Table\">\n                    <div className=\"FeatureTag-Column\"></div>\n                    <div className=\"FeatureTag-Column Implementation\"></div>\n                    <div className=\"FeatureTag-Column Implementation\"></div>\n                    <div className=\"FeatureTag-Column Implementation\"></div>\n                    <div className=\"FeatureTag-Column Bugs\"></div>\n                    <div className=\"FeatureTag-Column Bugs\"></div>\n                    <div className=\"FeatureTag-Column Bugs\"></div>\n                    <div className=\"FeatureTag-Column Bugs\"></div>\n                    <div className=\"FeatureTag-Column Bugs\"></div>\n                    <div className=\"FeatureTag-Column\"></div>\n                    <div className=\"FeatureTag-Column\"></div>\n                    <div className=\"FeatureTag-Column\"></div>\n                    <div className=\"FeatureTag-Row FeatureTag-TableHeader\">\n                        <div>Repo</div>\n                        <div><span className=\"MetaTitleHolder\"><span className=\"MetaTitle\">Planned Work</span></span>Todo</div>\n                        <div>WIP</div>\n                        <div>Done</div>\n                        <div><span className=\"MetaTitleHolder\"><span className=\"MetaTitle\">Bugs</span></span>P1</div>\n                        <div>P2</div>\n                        <div>P3</div>\n                        <div>WIP</div>\n                        <div>Fixed</div>\n                        <div>Other</div>\n                        <div>Delivery</div>\n                        <div></div>\n                    </div>\n                    { rows }\n                </div>\n            </div>\n        );\n    }\n}\n\nclass App extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            feature: {\n                label: 'Loading...',\n                repos: []\n            }\n        }\n    }\n\n    async componentDidMount() {\n        if (!Array.isArray(query.repo)) {\n            query.repo = [query.repo];\n        }\n        document.title = query.label;\n        let feature = await getFeature(query.label, query.repo);\n        this.setState({feature: feature}) \n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <FeatureTag feature={ this.state.feature } />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}