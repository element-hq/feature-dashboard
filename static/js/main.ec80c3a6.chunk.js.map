{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["options","octokit","Octokit","getGithubProject","issue","components","repository_url","split","_components$slice","slice","length","_components$slice2","Object","slicedToArray","owner","repo","processIssue","_callee2","progress","regenerator_default","a","wrap","_context2","prev","next","undefined","state","abrupt","url","labels","map","label","color","name","assignees","stop","establishDeliveryDate","deliveryDate","milestone","due_on","Date","Math","max","getState","assignee","getType","includes","_arr","_i","priority","concat","template","todo","issues","p1bugs","p2bugs","p3bugs","others","wip","done","getFeature","_callee4","searchRepos","searchString","repos","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_context4","join","search","issuesAndPullRequests","endpoint","merge","q","Symbol","iterator","value","t0","return","finish","paginate","then","_ref","asyncToGenerator","mark","_callee3","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","project","repoName","type","_context3","t1","sent","push","call","t2","values","_x4","apply","this","arguments","query","queryString","parse","window","location","FeatureTagRow","repoFeature","counted","completed","reduce","b","total","toFixed","filter","login","props","githubSearch","githubAdvancedSearch","issueLink","bugLinks","react_default","createElement","key","href","target","rel","className","getAssigneesFilter","dateFormat","calculatePercentCompleted","Component","FeatureTag","feature","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","_iterator","err","rows","App_FeatureTagRow","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","Array","isArray","document","title","setState","App_FeatureTag","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec80c3a6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport dateFormat from 'dateformat';\nimport Octokit from '@octokit/rest';\nimport queryString from 'query-string';\nimport './App.css';\n\nconst TOKEN = ''; /* Github personal access token goes here (for now) */\n\nlet options = {};\nif (TOKEN) {\n    options = {\n        auth: 'token ' + TOKEN\n    }\n}\n\nconst octokit = new Octokit(options);\n\nfunction getGithubProject(issue) {\n    let components = issue.repository_url.split('/');\n    let [owner, repo] = components.slice(components.length - 2);\n    return {\n        owner: owner,\n        repo: repo\n    }\n}\n\nasync function processIssue(issue) {\n    let progress = undefined;\n    if (issue.state !== 'closed') {\n        progress = 'n/a' /* await getTaskCount(issue); */ // This should be lazy-loaded.\n    }\n\n    return {\n        url: issue.url,\n        labels: issue.labels.map(label => {\n            return {\n                color: label.color,\n                name: label.name\n            }\n        }),\n        progress: progress,\n        assignees: issue.assignees\n    }\n}\n\n/*\nasync function getTaskCount(issue) {\n    let githubProject = getGithubProject(issue);\n    let options = octokit.issues.listComments.endpoint.merge({\n        owner: githubProject.owner,\n        repo: githubProject.repo,\n        number: issue.number\n    });\n    let comments = await octokit.paginate(options);\n    comments = comments.map(comment => comment.body);\n    comments.unshift(issue.body);\n    comments = comments.join(\"\\n\").split(/\\r?\\n/)\n    let completed = comments.filter(comment => comment.trim().toLowerCase().startsWith('- [x]')).length;\n    let outstanding = comments.filter(comment => comment.trim().startsWith('- [ ]')).length;\n    return {\n        completed: completed,\n        outstanding: outstanding\n    }\n}\n*/\n\nfunction establishDeliveryDate(issue, deliveryDate) {\n    if (deliveryDate === null) {\n        return null;\n    }\n    else if (issue.milestone && issue.milestone.due_on) {\n        if (deliveryDate === undefined) {\n            return new Date(issue.milestone.due_on);\n        }\n        else {\n            return Math.max(deliveryDate, new Date(issue.milestone.due_on));\n        }\n    }\n    else {\n        return null;\n    }\n}\n\nfunction getState(issue) {\n    if (issue.state === 'closed') {\n        return 'done';\n    }\n    else if (issue.state === 'open' && (\n            issue.assignees.length === 0 ||\n            issue.assignee === undefined)\n    ) {\n        return 'todo';\n    }\n    else return 'wip';\n}\n\nfunction getType(issue) {\n    let labels = issue.labels.map(label => label.name);\n    if (labels.includes('bug')) {\n        for (const priority of ['p1', 'p2', 'p3']) {\n            if (labels.includes(priority)) {\n                return `${priority}bugs`;\n            }\n        }\n    }\n    else if (labels.includes('feature')) {\n        return 'issues';\n    }\n    return 'others';\n}\n\nfunction template(label, repo) {\n    return {\n        label: label,\n        repo: repo,\n        deliveryDate: undefined,\n        todo: {\n            issues: [],\n            p1bugs: [],\n            p2bugs: [],\n            p3bugs: [],\n            others: []\n        },\n        wip: {\n            issues: [],\n            p1bugs: [],\n            p2bugs: [],\n            p3bugs: [],\n            others: []\n        },\n        done: {\n            issues: [],\n            p1bugs: [],\n            p2bugs: [],\n            p3bugs: [],\n            others: []\n        }\n    };\n}\n\nasync function getFeature(label, searchRepos) {\n    let searchString = searchRepos.map(repo => 'repo:' + repo).join(' ') + ' label:' + label + ' is:issue';\n    const options = octokit.search.issuesAndPullRequests.endpoint.merge({\n        q: searchString\n    });\n\n    const repos = {};\n    for (const repo of searchRepos) {\n        repos[repo] = template(label, repo);\n    }\n\n    return await octokit.paginate(options)\n    .then(async(issues) => {\n        for (const issue of issues) {\n            const project = getGithubProject(issue);\n            const repoName = `${project.owner}/${project.repo}`\n            const repo = repos[repoName];\n\n            let state = getState(issue);\n            let type = getType(issue);\n\n            repo[state][type].push(await processIssue(issue));\n            if (state !== 'done') {\n                repo.deliveryDate = establishDeliveryDate(issue, repo.deliveryDate);\n            }\n\n        }\n        return {\n            label: label,\n            repos: Object.values(repos)\n        }\n    });\n}\n\nlet query = queryString.parse(window.location.search);\n\nclass FeatureTagRow extends Component {\n    calculatePercentCompleted(repoFeature) {\n        let counted = ['issues', 'p1bugs'];\n\n        let completed = counted.map(type => repoFeature.done[type].length).reduce((a, b) => a + b);\n        let total = counted.map(type =>\n            repoFeature.todo[type].length +\n            repoFeature.wip[type].length +\n            repoFeature.done[type].length).reduce((a, b) => a + b, 0);\n\n        if (total === 0) {\n            return '~';\n        }\n        return (completed / total * 100).toFixed(0);\n    }\n\n    getAssigneesFilter(issues) {\n        /* TODO: There's a bug if you search WIP of 0, because it doesn't add any assignees to the filter (and returns\n         * > 0 results). We really need a makeWIPLink method that returns no link at all if there are no items in flight.\n         * */\n        let filter = issues.map(issue => issue.assignees.map(assignee => assignee.login))\n            .reduce((a, b) => a.concat(b), [])\n            .map(assignee => `assignee:${assignee}`)\n            .join('+');\n        if (!filter) {\n            filter = 'no:assignee';\n        }\n        return filter;\n    }\n\n    render() {\n        let repoFeature = this.props.repoFeature;\n\n        let githubSearch = `https://github.com/${repoFeature.repo}/issues?utf8=%E2%9C%93&q=label%3A${repoFeature.label}+is%3Aissue+`\n        let githubAdvancedSearch = `https://github.com/search?utf8=%E2%9C%93&q=is%3Aopen+repo%3A${repoFeature.repo}+label%3A${repoFeature.label}+`;\n        let githubAdvancedSearchEnd = `&type=Issues&ref=advsearch&l=&l=+`;\n        let issueLink = `${githubSearch}is%3Aopen+no%3Aassignee+label%3Afeature`;\n\n        let bugLinks = [1, 2, 3].map(priority =>\n            <div key={ priority }><a href={\n                `${githubSearch}is%3Aopen+no%3Aassignee+label%3Ap${priority}+label%3Abug`\n            } target=\"_blank\" rel=\"noopener noreferrer\">\n            { repoFeature.todo[`p${priority}bugs`].length }\n            </a></div>\n        );\n\n        return (\n            <div className=\"FeatureTag-Row\">\n                <div>{ repoFeature.repo }</div>\n                <div><a href={ issueLink } target=\"_blank\" rel=\"noopener noreferrer\">{ repoFeature.todo.issues.length }</a></div>\n                <div><a href={ `${githubAdvancedSearch}label%3Afeature+${this.getAssigneesFilter(repoFeature.wip.issues)}${githubAdvancedSearchEnd}` } target=\"_blank\" rel=\"noopener noreferrer\" >{\n                    repoFeature.wip.issues.length \n                }</a></div>\n                <div><a href={ `${githubSearch}label%3Afeature+is%3aclosed` } target=\"_blank\" rel=\"noopener noreferrer\">{\n                    repoFeature.done.issues.length\n                }</a></div>\n                { bugLinks }\n                <div><a href={ `${githubAdvancedSearch}label%3Abug+${this.getAssigneesFilter(repoFeature.wip.p1bugs.concat(repoFeature.wip.p2bugs).concat(repoFeature.wip.p3bugs))}${githubAdvancedSearchEnd}` } target=\"_blank\" rel=\"noopener noreferrer\" >{\n                    repoFeature.wip.p1bugs.length +\n                    repoFeature.wip.p2bugs.length +\n                    repoFeature.wip.p3bugs.length\n                }</a></div>\n                <div><a href={ `${githubSearch}label%3Abug+is%3aclosed`} target=\"_blank\" rel=\"noopener noreferrer\">{\n                    repoFeature.done.p1bugs.length +\n                    repoFeature.done.p2bugs.length +\n                    repoFeature.done.p3bugs.length\n                }</a></div>\n                <div><a href={ `${githubSearch}-label%3Afeature+-label%3Ap1+-label%3Ap2+-label%3Ap3+is%3Aopen` } target=\"_blank\" rel=\"noopener noreferrer\">{\n                    repoFeature.todo.others.length +\n                    repoFeature.wip.others.length\n                }</a></div>\n                <div className={ repoFeature.deliveryDate ? \"\" : \"NoDate\" }>{ repoFeature.deliveryDate ?\n                        dateFormat(repoFeature.deliveryDate, 'yyyy-mm-dd') :\n                    'n/a' }</div>\n                <div className=\"Completed\">{ this.calculatePercentCompleted(repoFeature) }%</div>\n            </div>\n        );\n    }\n}\n\nclass FeatureTag extends Component {\n    calculatePercentCompleted(feature) {\n        let counted = ['issues', 'p1bugs'];\n\n        let completed = 0;\n        let total = 0;\n\n        for (const repoFeature of feature.repos) {\n            completed += counted.map(type => repoFeature.done[type].length).reduce((a, b) => a + b);\n            total += counted.map(type => \n                repoFeature.todo[type].length +\n                repoFeature.wip[type].length +\n                repoFeature.done[type].length).reduce((a, b) => a + b, 0);\n        }\n\n        if (total === 0) {\n            return \"~\";\n        }\n        return (completed / total * 100).toFixed(0);\n    }\n\n    render() {\n        let rows = this.props.feature.repos.map(repo => <FeatureTagRow repoFeature={ repo } key={ repo.repo }/>);\n\n        return (\n            <div className=\"FeatureTag\">\n                <div className=\"FeatureTag-Header\">\n                    <div className=\"Label\">{ this.props.feature.label }</div>\n                    <div className=\"PercentComplete\">{ this.calculatePercentCompleted(this.props.feature) }%</div>\n                </div>\n                <div className=\"FeatureTag-Table\">\n                    <div className=\"FeatureTag-Column\"></div>\n                    <div className=\"FeatureTag-Column Implementation\"></div>\n                    <div className=\"FeatureTag-Column Implementation\"></div>\n                    <div className=\"FeatureTag-Column Implementation\"></div>\n                    <div className=\"FeatureTag-Column Bugs\"></div>\n                    <div className=\"FeatureTag-Column Bugs\"></div>\n                    <div className=\"FeatureTag-Column Bugs\"></div>\n                    <div className=\"FeatureTag-Column Bugs\"></div>\n                    <div className=\"FeatureTag-Column Bugs\"></div>\n                    <div className=\"FeatureTag-Column\"></div>\n                    <div className=\"FeatureTag-Column\"></div>\n                    <div className=\"FeatureTag-Column\"></div>\n                    <div className=\"FeatureTag-Row FeatureTag-TableHeader\">\n                        <div>Repo</div>\n                        <div><span className=\"MetaTitleHolder\"><span className=\"MetaTitle\">Planned Work</span></span>Todo</div>\n                        <div>WIP</div>\n                        <div>Done</div>\n                        <div><span className=\"MetaTitleHolder\"><span className=\"MetaTitle\">Bugs</span></span>P1</div>\n                        <div>P2</div>\n                        <div>P3</div>\n                        <div>WIP</div>\n                        <div>Fixed</div>\n                        <div>Other</div>\n                        <div>Delivery</div>\n                        <div></div>\n                    </div>\n                    { rows }\n                </div>\n            </div>\n        );\n    }\n}\n\nclass App extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            feature: {\n                label: 'Loading...',\n                repos: []\n            }\n        }\n    }\n\n    async componentDidMount() {\n        if (!Array.isArray(query.repo)) {\n            query.repo = [query.repo];\n        }\n        document.title = query.label;\n        let feature = await getFeature(query.label, query.repo);\n        this.setState({feature: feature}) \n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <FeatureTag feature={ this.state.feature } />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}