{"version":3,"sources":["components/TokenInput.js","components/Summary.js","Github.js","components/Plan.js","components/Fail.js","App.js","serviceWorker.js","index.js"],"names":["TokenInput","e","preventDefault","token","prompt","localStorage","getItem","setItem","window","location","reload","react_default","a","createElement","className","concat","this","props","status","onClick","handleClick","title","Component","template","labels","repo","deliveryDate","undefined","todo","issues","p1bugs","p2bugs","p3bugs","others","wip","done","establishDeliveryDate","issue","milestone","due_on","Date","Math","max","SummaryRow","repoFeature","counted","completed","map","type","length","reduce","b","total","toFixed","filter","Object","toConsumableArray","Set","assignees","assignee","login","join","q","advanced","includes","item","queryString","label","searchUrl","assigneesFilter","getAssigneesFilter","issueNumbers","x","number","href","target","rel","makeLink","dateFormat","calculatePercentCompleted","Summary","feature","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop","value","_iterator3","repos","Symbol","iterator","next","err","return","searchRepos","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","owner","state","push","values","generateSummary","rows","Summary_SummaryRow","key","components_TokenInput","connectionStatus","Github","octokit","Octokit","connection","auth","request","then","_","catch","name","options","listComments","endpoint","merge","paginate","comments","comment","body","unshift","split","trim","toLowerCase","startsWith","outstanding","searchString","search","issuesAndPullRequests","githubIssues","Issue","githubIssue","classCallCheck","url","html_url","color","progress","components","repository_url","_components$slice","slice","_components$slice2","slicedToArray","getType","getState","_arr","_i","priority","Plan","_ref","_this","phases","apply","sort","Number","phasedIssues","forEach","phase","console","log","class","Fail","Array","pathname","match","App","possibleConstructorReturn","getPrototypeOf","call","hash","query","parse","substring","indexOf","isArray","getConnection","setState","document","getIssues","_this2","es","onChange","react_router_dom","react_router","path","render","components_Summary","assign","components_Plan","exact","component","RedirectLegacy","replace","Boolean","hostname","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47d1c8d2.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TokenInput extends Component {\n\n    handleClick(e) {\n        e.preventDefault();\n        let token = prompt('Personal github token', localStorage.getItem('github_token') || '');\n        if (token !== null) {\n            localStorage.setItem('github_token', token);\n            window.location.reload();\n        }\n    }\n\n    render() {\n        return (\n            <div className={ `TokenInput ${this.props.status}` } \n                onClick={ this.handleClick }\n                title={\n                    this.props.status === 'unauthenticated' ? 'Add a personal GitHub token to raise the limit of requests you can make to the API' :\n                    this.props.status === 'invalid-credentials' ? 'Your github token is invalid (fell back to unauthenticated access)' : ''\n                }>\n                { this.props.status === 'unauthenticated' ? 'Add ' : '' }Personal GitHub Token\n            </div>\n        );\n    }\n\n}\n\nexport default TokenInput;\n","import React, { Component } from 'react';\nimport dateFormat from 'dateformat';\n\nimport TokenInput from './TokenInput';\n\nfunction template(labels, repo) {\n    return {\n        labels: labels,\n        repo: repo,\n        deliveryDate: undefined,\n        todo: {\n            issues: [],\n            p1bugs: [],\n            p2bugs: [],\n            p3bugs: [],\n            others: []\n        },\n        wip: {\n            issues: [],\n            p1bugs: [],\n            p2bugs: [],\n            p3bugs: [],\n            others: []\n        },\n        done: {\n            issues: [],\n            p1bugs: [],\n            p2bugs: [],\n            p3bugs: [],\n            others: []\n        }\n    };\n}\n\nfunction establishDeliveryDate(issue, deliveryDate) {\n    if (deliveryDate === null) {\n        return null;\n    }\n    else if (issue.milestone && issue.milestone.due_on) {\n        if (deliveryDate === undefined) {\n            return new Date(issue.milestone.due_on);\n        }\n        else {\n            return Math.max(deliveryDate, new Date(issue.milestone.due_on));\n        }\n    }\n    else {\n        return null;\n    }\n}\n\n\nfunction generateSummary(issues, labels, searchRepos) { \n    const repos = {};\n    for (const repo of searchRepos) {\n        repos[repo] = template(labels, repo);\n    }\n\n    for (const issue of issues) {\n        const repoName = `${issue.owner}/${issue.repo}`\n        const repo = repos[repoName];\n\n        repo[issue.state][issue.type].push(issue);\n        if (issue.state !== 'done' && ['issues', 'p1bugs'].includes(issue.type)) {\n            repo.deliveryDate = establishDeliveryDate(issue, repo.deliveryDate);\n        }\n\n    }\n    return {\n        labels: labels,\n        repos: Object.values(repos)\n    }\n}\n\n\nclass SummaryRow extends Component {\n    calculatePercentCompleted(repoFeature) {\n        let counted = ['issues', 'p1bugs'];\n\n        let completed = counted.map(type => repoFeature.done[type].length).reduce((a, b) => a + b);\n        let total = counted.map(type =>\n            repoFeature.todo[type].length +\n            repoFeature.wip[type].length +\n            repoFeature.done[type].length).reduce((a, b) => a + b, 0);\n\n        if (total === 0) {\n            return '~';\n        }\n        return (completed / total * 100).toFixed(0);\n    }\n\n    getAssigneesFilter(issues) {\n        let filter = [...new Set(issues.map(issue => issue.assignees.map(assignee => assignee.login))\n            .reduce((a, b) => a.concat(b), []))]\n            .map(assignee => `assignee:${assignee}`)\n            .join('+');\n        if (!filter) {\n            filter = 'no:assignee';\n        }\n        return filter;\n    }\n\n    makeLink(repo, labels, q, issues) {\n        if (issues.length === 0) {\n            return (\n                <span>0</span>\n            );\n        }\n        if (!q) {\n            q = []\n        }\n        let advanced = false;\n\n        if (q.includes('assignee:*')) {\n            /* If the list of labels includes ['assignee', '*'], we'll strip it from the\n             * list and implement our search link using github's _advanced_ search\n             * functionality instead. This is because assignee:* doesn't reliably work\n             * with regular search (or advanced), so instead we have to apply the other\n             * search criteria _and_ a list of assignee:x where x all the assignees of\n             * all the issues which have assignees. Is that clear? Good, great. */\n            q = q.filter(item => item !== 'assignee:*')\n            advanced = true;\n        }\n        q = q.concat(labels.map(label => `label:${label}`));\n\n        let queryString = q.join('+');\n\n        let searchUrl = \"\";\n        if (advanced) {\n            let assigneesFilter = this.getAssigneesFilter(issues);\n            searchUrl = `https://github.com/search?utf8=%E2%9C%93&q=repo%3A${repo}+${queryString}+${assigneesFilter}&type=Issues&ref=advsearch&l=&l=+`;\n        }\n        else {\n            searchUrl = `https://github.com/${repo}/issues?utf8=%E2%9C%93&q=${queryString}`;\n        }\n\n        let issueNumbers = issues.map(x => `#${x.number} ${x.title}`).reduce((a, b) => a.concat(b), []);\n        return (\n            <a href={ searchUrl } target=\"_blank\" rel=\"noopener noreferrer\" title={ issueNumbers.join(\"\\n\") }>\n                { issueNumbers.length }\n            </a>\n        );\n    }\n\n    render() {\n        let repoFeature = this.props.repoFeature;\n\n        return (\n            <div className=\"Summary-Row\">\n                <div><a href={ `https://github.com/${ repoFeature.repo }/issues` }>{ repoFeature.repo }</a></div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:open',\n                            'no:assignee',\n                            'label:feature'\n                        ],\n                        repoFeature.todo.issues\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:open',\n                            'assignee:*',\n                            'label:feature'\n                        ],\n                        repoFeature.wip.issues\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:closed',\n                            'label:feature'\n                        ],\n                        repoFeature.done.issues\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:open',\n                            'no:assignee',\n                            'label:bug',\n                            '-label:p2', /* Any bug not flagged as p2-5 is p1 */\n                            '-label:p3', /* This is weird, but encourages the triaging */\n                            '-label:p4', /* of unprioritised bugs. */\n                            '-label:p5'\n                        ],\n                        repoFeature.todo.p1bugs\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:open',\n                            'no:assignee',\n                            'label:bug',\n                            'label:p2'\n                        ],\n                        repoFeature.todo.p2bugs\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:open',\n                            'no:assignee',\n                            'label:bug',\n                            'label:p3'\n                        ],\n                        repoFeature.todo.p3bugs\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:open',\n                            'assignee:*',\n                            'label:bug'\n                        ],\n                        repoFeature.wip.p1bugs.concat(repoFeature.wip.p2bugs).concat(repoFeature.wip.p3bugs)\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:closed',\n                            'label:bug'\n                        ],\n                        repoFeature.done.p1bugs.concat(repoFeature.done.p2bugs).concat(repoFeature.done.p3bugs)\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        ['is:open'].concat(repoFeature.todo.others.concat(repoFeature.wip.others).map(issue => issue.number)),\n                        repoFeature.todo.others.concat(repoFeature.wip.others)\n                    )\n                }</div>\n                <div className={ repoFeature.deliveryDate ? \"\" : \"NoDate\" }>{ repoFeature.deliveryDate ?\n                        dateFormat(repoFeature.deliveryDate, 'yyyy-mm-dd') :\n                    'n/a' }</div>\n                <div className=\"Completed\">{ this.calculatePercentCompleted(repoFeature) }%</div>\n            </div>\n        );\n    }\n}\n\nclass Summary extends Component {\n    calculatePercentCompleted(feature) {\n        let counted = ['issues', 'p1bugs'];\n\n        let completed = 0;\n        let total = 0;\n\n        for (const repoFeature of feature.repos) {\n            completed += counted.map(type => repoFeature.done[type].length).reduce((a, b) => a + b);\n            total += counted.map(type => \n                repoFeature.todo[type].length +\n                repoFeature.wip[type].length +\n                repoFeature.done[type].length).reduce((a, b) => a + b, 0);\n        }\n\n        if (total === 0) {\n            return \"~\";\n        }\n        return (completed / total * 100).toFixed(0);\n    }\n\n    render() {\n        let feature = generateSummary(\n            this.props.issues,\n            this.props.labels,\n            this.props.repos\n        );\n\n        let rows = feature.repos.map(repo => <SummaryRow repoFeature={ repo }\n            key={ repo.repo } />\n        );\n\n        return (\n            <div className=\"Summary\">\n                <div className=\"Summary-Header\">\n                    <div className=\"Label\">{ feature.labels.join(' ') }</div>\n                    <div className=\"PercentComplete\">{ this.calculatePercentCompleted(feature) }%</div>\n                </div>\n                <div className=\"Summary-Table\">\n                    <div className=\"Summary-Column\"></div>\n                    <div className=\"Summary-Column Implementation\"></div>\n                    <div className=\"Summary-Column Implementation\"></div>\n                    <div className=\"Summary-Column Implementation\"></div>\n                    <div className=\"Summary-Column Bugs\"></div>\n                    <div className=\"Summary-Column Bugs\"></div>\n                    <div className=\"Summary-Column Bugs\"></div>\n                    <div className=\"Summary-Column Bugs\"></div>\n                    <div className=\"Summary-Column Bugs\"></div>\n                    <div className=\"Summary-Column\"></div>\n                    <div className=\"Summary-Column\"></div>\n                    <div className=\"Summary-Column\"></div>\n                    <div className=\"Summary-Row Summary-TableHeader\">\n                        <div>Repo</div>\n                        <div><span className=\"MetaTitleHolder\"><span className=\"MetaTitle\">Planned Work</span></span>Todo</div>\n                        <div>WIP</div>\n                        <div>Done</div>\n                        <div><span className=\"MetaTitleHolder\"><span className=\"MetaTitle\">Bugs</span></span>P1</div>\n                        <div>P2</div>\n                        <div>P3</div>\n                        <div>WIP</div>\n                        <div>Fixed</div>\n                        <div>Other</div>\n                        <div>Delivery</div>\n                        <div></div>\n                    </div>\n                    { rows }\n                </div>\n                <TokenInput status={ this.props.connectionStatus }/>\n            </div>\n        );\n    }\n}\n\nexport default Summary;\n","import Octokit from '@octokit/rest';\n\nclass Github {\n\n    static async getConnection(token) {\n        /* let token = localStorage.getItem('github_token'); */\n\n        if (!token) {\n            return {\n                octokit: new Octokit(),\n                status: 'unauthenticated'\n            }\n        }\n\n        let connection = undefined;\n\n        let octokit = new Octokit({\n            auth: `token ${token}`\n        });\n        await octokit.request('GET /')\n            .then(_ => {\n                connection = {\n                    octokit: octokit,\n                    status: 'authenticated'\n                }\n            })\n            .catch(e => {\n                if (e.name === 'HttpError' && e.status === 401) {\n                    connection = {\n                        octokit: new Octokit(),\n                        status: 'invalid-credentials'\n                    }\n                }\n            });\n\n        return connection;\n    }\n\n    static async getTaskCount(octokit, issue) {\n        let options = octokit.issues.listComments.endpoint.merge({\n            owner: issue.owner,\n            repo: issue.repo,\n            number: issue.number\n        });\n        let comments = await octokit.paginate(options);\n        comments = comments.map(comment => comment.body);\n        comments.unshift(issue.body);\n        comments = comments.join(\"\\n\").split(/\\r?\\n/)\n        let completed = comments.filter(comment => comment.trim().toLowerCase().startsWith('- [x]')).length;\n        let outstanding = comments.filter(comment => comment.trim().startsWith('- [ ]')).length;\n        return {\n            completed: completed,\n            outstanding: outstanding\n        }\n    }\n\n    static async getIssues(octokit, labels, searchRepos) {\n        let searchString = searchRepos.map(repo => 'repo:' + repo)\n            .join(' ') + ' ' + labels.map(label => `label:${label}`).join(' ') + ' is:issue';\n\n        const options = octokit.search.issuesAndPullRequests.endpoint.merge({\n            q: searchString\n        });\n\n        let githubIssues = await octokit.paginate(options);\n\n        return githubIssues.map(issue => new Issue(issue));\n    }\n\n}\n\nclass Issue {\n\n    constructor(githubIssue) {\n\n        this.githubIssue = githubIssue;\n        this.url = githubIssue.html_url;\n        this.labels = githubIssue.labels.map(label => {\n            return {\n                color: label.color,\n                name: label.name\n            }\n        });\n        this.progress = undefined;\n        this.title = githubIssue.title;\n        this.number = githubIssue.number;\n        this.assignees = githubIssue.assignees;\n\n        let components = githubIssue.repository_url.split('/');\n        [this.owner, this.repo] = components.slice(components.length - 2);\n\n        this.type = Issue.getType(githubIssue);\n        this.state = Issue.getState(githubIssue);\n\n    }\n\n    static getType(githubIssue) {\n        let labels = githubIssue.labels.map(label => label.name);\n        if (labels.includes('bug')) {\n            for (const priority of ['p1', 'p2', 'p3']) {\n                if (labels.includes(priority)) {\n                    return `${priority}bugs`;\n                }\n            }\n            return `p1bugs`; // If the bug isn't prioritised, counting it as P1 will encourage\n                             // prioritisation.\n        }\n        else if (labels.includes('feature') || labels.includes('enhancement')) {\n            return 'issues';\n        }\n        return 'others';\n    }\n\n    static getState(githubIssue) {\n        if (githubIssue.state === 'closed') {\n            return 'done';\n        }\n        else if (githubIssue.state === 'open' && (\n                githubIssue.assignees.length === 0 ||\n                githubIssue.assignee === undefined)\n        ) {\n            return 'todo';\n        }\n        else {\n            return 'wip';\n        }\n    }\n\n}\n\nexport default Github;\n","import React, { Component } from 'react';\n\nimport TokenInput from './TokenInput';\n\nclass Plan extends Component {\n\n    render() {\n        let phases = [...new Set(\n            [].concat(...this.props.issues.map(issue =>\n                issue.labels.map(label => label.name)\n            )))]\n            .filter(label => label.startsWith(\"phase:\"))\n            .sort((a, b) => {\n                return Number(a.split(\":\")[1]) -\n                    Number(b.split(\":\")[1]);\n            });\n\n        let phasedIssues = {};\n        phases.forEach(phase => {\n            phasedIssues[phase] = this.props.issues.filter(issue => {\n                return issue.labels.map(label => label.name)\n                    .includes(phase);\n            })\n                .sort((a, b) => {\n                    return a.number - b.number;\n                });\n        });\n        console.log(phasedIssues);\n        return (\n            <div class=\"Plan\">\n                <p class=\"label\">{ this.props.labels.join(' ') }</p>\n                <ul>\n                    {\n                        phases.map(phase => {\n                            return (\n                                <li class=\"phase\" key={ phase }>{ phase }\n                                    <ul>\n                                        {\n                                            phasedIssues[phase].map(issue =>\n                                                <li class=\"task\" key={ issue.number }>\n                                                    <a href={ issue.url }>{ `${issue.number} ${issue.title}` }</a>\n                                                    <span class='state'>\n                                                    {\n                                                        issue.state === 'done' ? ' (done)' : issue.state === 'wip' ? ' (in progress)' : ''\n                                                    }\n                                                    </span>\n                                                </li>\n                                            )\n                                        }\n                                    </ul>\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n                <TokenInput status={ this.props.connectionStatus }/>\n            </div>\n        );\n    }\n\n}\n\nexport default Plan;\n","import React, { Component } from 'react';\n\nclass Fail extends Component {\n\n    render() {\n        return (\n            <pre>\n                {`\n    ▄██████████████▄▐█▄▄▄▄█▌\n    ██████▌▄▌▄▐▐▌███▌▀▀██▀▀\n    ████▄█▌▄▌▄▐▐▌▀███▄▄█▌\n    ▄▄▄▄▄██████████████\n\n    Please what means \"`}\n            { Array.join(\n                this.props.location.pathname.match(/.{1,36}/g),\n                '\\n                       ')\n            }\"?\n            </pre>\n        );\n    }\n}\n\nexport default Fail;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport queryString from 'query-string';\nimport HashChange from 'react-hashchange';\n\nimport Summary from './components/Summary';\nimport Github from './Github';\nimport Plan from './components/Plan';\nimport Fail from './components/Fail';\nimport './feature-dashboard.css';\n\nclass App extends Component {\n\n    constructor(props) {\n        super();\n        this.state = {\n            issues: [],\n            repos: [],\n            labels: [],\n            /* feature: {\n                labels: ['Loading...'],\n                repos: []\n            },*/\n            connectionStatus: 'connecting'\n        }\n    }\n\n    async componentDidMount() {\n        /*\n         * FIXME: This _looks_ wrong. Why are we fiddling around parsing the location.hash\n         * when we've got a perfectly good HashRouter to do that for us?\n         */\n        if (window.location.hash.includes(\"?\")) {\n            let query = queryString.parse(\n                window.location.hash.substring(\n                    window.location.hash.indexOf(\"?\")\n                )\n            )\n            if (!Array.isArray(query.repo)) {\n                query.repo = [query.repo];\n            }\n            if (!Array.isArray(query.label)) {\n                query.label = [query.label];\n            }\n\n            let connection = await Github.getConnection();\n            this.setState({connectionStatus: connection.status });\n\n            document.title = query.label.join(' ');\n\n            let issues = await Github.getIssues(connection.octokit, query.label, query.repo);\n\n            this.setState({\n                labels: query.label,\n                repos: query.repo,\n                issues: issues\n            });\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <HashChange onChange={hash => {\n                    window.location.reload();\n                }} />\n                <Router>\n                    <Switch>\n                        <Route path=\"/summary\"\n                            render={ props => <Summary \n                                { ...props }\n                                repos={ this.state.repos }\n                                labels={ this.state.labels }\n                                issues={ this.state.issues }\n                                connectionStatus={ this.state.connectionStatus }\n                            /> }\n                        />\n                        <Route path=\"/plan\" \n                            render={ props => <Plan \n                                { ...props }\n                                repos={ this.state.repos }\n                                labels={ this.state.labels }\n                                issues={ this.state.issues }\n                                connectionStatus={ this.state.connectionStatus }\n                            /> }\n                        />\n                        <Route exact path=\"/\" component= { RedirectLegacy } />\n                        <Route component={ Fail } />\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n\n}\n\n/* \n * Legacy links to this tool just passed query params to the root:\n *\n * http://host/?repo=example-org/example-repo&...\n *\n * I want to redirect those links to the summary view, but I wasn't able to\n * make ReactRouter execute the redirect without making a mess of the query \n * params:\n *\n * http://host/?repo=... -> http://host/?repo=...#/summary\n *\n * Crucially, after the ReactRouter redirect, the query params were no longer\n * accessible to `this.props.location.search`. So instead we're taking matters\n * into our own hands and wrestling `window.location.replace` directly,\n * preserving the query params in the destination:\n *\n * http://host/?repo=... -> https://host/#/summary?repo=...\n */\nclass RedirectLegacy extends Component {\n\n    render() {\n        window.location.replace(`${window.location.pathname}#/summary${ window.location.search }`);\n        return (\n            <p>Redirecting...</p>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}