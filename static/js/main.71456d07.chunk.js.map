{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["getConnection","_callee2","token","connection","octokit","regenerator_default","a","wrap","_context2","prev","next","localStorage","getItem","abrupt","Octokit","status","undefined","auth","concat","request","then","_","catch","e","name","stop","getGithubProject","issue","components","repository_url","split","_components$slice","slice","length","_components$slice2","Object","slicedToArray","owner","repo","processIssue","_callee3","progress","_context3","state","url","labels","map","label","color","number","assignees","establishDeliveryDate","deliveryDate","milestone","due_on","Date","Math","max","getState","assignee","getType","includes","_arr","_i","priority","template","todo","issues","p1bugs","p2bugs","p3bugs","others","wip","done","getFeature","_callee5","searchRepos","searchString","options","repos","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_context5","join","search","issuesAndPullRequests","endpoint","merge","q","Symbol","iterator","value","t0","return","finish","paginate","_ref","asyncToGenerator","mark","_callee4","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","project","repoName","type","_context4","t1","sent","push","call","t2","values","_x5","apply","this","arguments","query","queryString","parse","window","location","FeatureTagRow","repoFeature","counted","completed","reduce","b","total","toFixed","filter","toConsumableArray","Set","login","react_default","createElement","advanced","item","searchUrl","assigneesFilter","getAssigneesFilter","issueNumbers","x","href","target","rel","title","props","className","makeLink","dateFormat","calculatePercentCompleted","Component","TokenInput","preventDefault","prompt","setItem","reload","onClick","handleClick","FeatureTag","feature","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","_iterator","err","rows","App_FeatureTagRow","key","App_TokenInput","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","setState","Array","isArray","document","App_FeatureTag","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71456d07.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport dateFormat from 'dateformat';\nimport Octokit from '@octokit/rest';\nimport queryString from 'query-string';\nimport './App.css';\n\nasync function getConnection() {\n    let token = localStorage.getItem('github_token');\n\n    if (!token) {\n        return {\n            octokit: new Octokit(),\n            status: 'unauthenticated'\n        }\n    }\n\n    let connection = undefined;\n\n    let octokit = new Octokit({\n        auth: `token ${token}`\n    });\n    await octokit.request('GET /')\n        .then(_ => {\n            connection = {\n                octokit: octokit,\n                status: 'authenticated'\n            }\n        })\n        .catch(e => {\n            if (e.name === 'HttpError' && e.status === 401) {\n                connection = {\n                    octokit: new Octokit(),\n                    status: 'invalid-credentials'\n                }\n            }\n        });\n\n    return connection;\n}\n\nfunction getGithubProject(issue) {\n    let components = issue.repository_url.split('/');\n    let [owner, repo] = components.slice(components.length - 2);\n    return {\n        owner: owner,\n        repo: repo\n    }\n}\n\nasync function processIssue(issue) {\n    let progress = undefined;\n    if (issue.state !== 'closed') {\n        progress = 'n/a' /* await getTaskCount(issue); */ // This should be lazy-loaded.\n    }\n\n    return {\n        url: issue.url,\n        labels: issue.labels.map(label => {\n            return {\n                color: label.color,\n                name: label.name\n            }\n        }),\n        progress: progress,\n        number: issue.number,\n        assignees: issue.assignees\n    }\n}\n\n/*\nasync function getTaskCount(issue) {\n    let githubProject = getGithubProject(issue);\n    let options = octokit.issues.listComments.endpoint.merge({\n        owner: githubProject.owner,\n        repo: githubProject.repo,\n        number: issue.number\n    });\n    let comments = await octokit.paginate(options);\n    comments = comments.map(comment => comment.body);\n    comments.unshift(issue.body);\n    comments = comments.join(\"\\n\").split(/\\r?\\n/)\n    let completed = comments.filter(comment => comment.trim().toLowerCase().startsWith('- [x]')).length;\n    let outstanding = comments.filter(comment => comment.trim().startsWith('- [ ]')).length;\n    return {\n        completed: completed,\n        outstanding: outstanding\n    }\n}\n*/\n\nfunction establishDeliveryDate(issue, deliveryDate) {\n    if (deliveryDate === null) {\n        return null;\n    }\n    else if (issue.milestone && issue.milestone.due_on) {\n        if (deliveryDate === undefined) {\n            return new Date(issue.milestone.due_on);\n        }\n        else {\n            return Math.max(deliveryDate, new Date(issue.milestone.due_on));\n        }\n    }\n    else {\n        return null;\n    }\n}\n\nfunction getState(issue) {\n    if (issue.state === 'closed') {\n        return 'done';\n    }\n    else if (issue.state === 'open' && (\n            issue.assignees.length === 0 ||\n            issue.assignee === undefined)\n    ) {\n        return 'todo';\n    }\n    else return 'wip';\n}\n\nfunction getType(issue) {\n    let labels = issue.labels.map(label => label.name);\n    if (labels.includes('bug')) {\n        for (const priority of ['p1', 'p2', 'p3']) {\n            if (labels.includes(priority)) {\n                return `${priority}bugs`;\n            }\n        }\n        return `p1bugs`; // If the bug isn't prioritised, counting it as P1 will encourage\n                         // prioritisation.\n    }\n    else if (labels.includes('feature') || labels.includes('enhancement')) {\n        return 'issues';\n    }\n    return 'others';\n}\n\nfunction template(label, repo) {\n    return {\n        label: label,\n        repo: repo,\n        deliveryDate: undefined,\n        todo: {\n            issues: [],\n            p1bugs: [],\n            p2bugs: [],\n            p3bugs: [],\n            others: []\n        },\n        wip: {\n            issues: [],\n            p1bugs: [],\n            p2bugs: [],\n            p3bugs: [],\n            others: []\n        },\n        done: {\n            issues: [],\n            p1bugs: [],\n            p2bugs: [],\n            p3bugs: [],\n            others: []\n        }\n    };\n}\n\nasync function getFeature(octokit, label, searchRepos) {\n    let searchString = searchRepos.map(repo => 'repo:' + repo).join(' ') + ' label:' + label + ' is:issue';\n    const options = octokit.search.issuesAndPullRequests.endpoint.merge({\n        q: searchString\n    });\n\n    const repos = {};\n    for (const repo of searchRepos) {\n        repos[repo] = template(label, repo);\n    }\n\n    return await octokit.paginate(options)\n    .then(async(issues) => {\n        for (const issue of issues) {\n            const project = getGithubProject(issue);\n            const repoName = `${project.owner}/${project.repo}`\n            const repo = repos[repoName];\n\n            let state = getState(issue);\n            let type = getType(issue);\n\n            repo[state][type].push(await processIssue(issue));\n            if (state !== 'done' && ['issues', 'p1bugs'].includes(type)) {\n                repo.deliveryDate = establishDeliveryDate(issue, repo.deliveryDate);\n            }\n\n        }\n        return {\n            label: label,\n            repos: Object.values(repos)\n        }\n    });\n}\n\nlet query = queryString.parse(window.location.search);\n\nclass FeatureTagRow extends Component {\n    calculatePercentCompleted(repoFeature) {\n        let counted = ['issues', 'p1bugs'];\n\n        let completed = counted.map(type => repoFeature.done[type].length).reduce((a, b) => a + b);\n        let total = counted.map(type =>\n            repoFeature.todo[type].length +\n            repoFeature.wip[type].length +\n            repoFeature.done[type].length).reduce((a, b) => a + b, 0);\n\n        if (total === 0) {\n            return '~';\n        }\n        return (completed / total * 100).toFixed(0);\n    }\n\n    getAssigneesFilter(issues) {\n        /* TODO: There's a bug if you search WIP of 0, because it doesn't add any assignees to the filter (and returns\n         * > 0 results). We really need a makeWIPLink method that returns no link at all if there are no items in flight.\n         * */\n        let filter = [...new Set(issues.map(issue => issue.assignees.map(assignee => assignee.login))\n            .reduce((a, b) => a.concat(b), []))]\n            .map(assignee => `assignee:${assignee}`)\n            .join('+');\n        if (!filter) {\n            filter = 'no:assignee';\n        }\n        return filter;\n    }\n\n    makeLink(repo, label, q, issues) {\n        if (issues.length === 0) {\n            return (\n                <span>0</span>\n            );\n        }\n        if (!q) {\n            q = []\n        }\n        let advanced = false;\n\n        if (q.includes('assignee:*')) {\n            /* If the list of labels includes ['assignee', '*'], we'll strip it from the\n             * list and implement our search link using github's _advanced_ search\n             * functionality instead. This is because assignee:* doesn't reliably work\n             * with regular search (or advanced), so instead we have to apply the other\n             * search criteria _and_ a list of assignee:x where x all the assignees of\n             * all the issues which have assignees. Is that clear? Good, great. */\n            q = q.filter(item => item !== 'assignee:*')\n            advanced = true;\n        }\n        q.push(`label:${label}`);\n\n        let queryString = q.join('+');\n\n        let searchUrl = \"\";\n        if (advanced) {\n            let assigneesFilter = this.getAssigneesFilter(issues);\n            searchUrl = `https://github.com/search?utf8=%E2%9C%93&q=repo%3A${repo}+${queryString}+${assigneesFilter}&type=Issues&ref=advsearch&l=&l=+`;\n        }\n        else {\n            searchUrl = `https://github.com/${repo}/issues?utf8=%E2%9C%93&q=${queryString}`;\n        }\n\n        let issueNumbers = issues.map(x => `#${x.number}`).reduce((a, b) => a.concat(b), []);\n        return (\n            <a href={ searchUrl } target=\"_blank\" rel=\"noopener noreferrer\" title={ issueNumbers.join(\"\\n\") }>\n                { issueNumbers.length }\n            </a>\n        );\n    }\n\n    render() {\n        let repoFeature = this.props.repoFeature;\n\n        return (\n            <div className=\"FeatureTag-Row\">\n                <div><a href={ `https://github.com/${ repoFeature.repo }/issues` }>{ repoFeature.repo }</a></div>\n\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        [\n                            'is:open',\n                            'no:assignee',\n                            'label:feature'\n                        ],\n                        repoFeature.todo.issues\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        [\n                            'is:open',\n                            'assignee:*',\n                            'label:feature'\n                        ],\n                        repoFeature.wip.issues\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        [\n                            'is:closed',\n                            'label:feature'\n                        ],\n                        repoFeature.done.issues\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        [\n                            'is:open',\n                            'no:assignee',\n                            'label:bug',\n                            'label:p1'\n                        ],\n                        repoFeature.todo.p1bugs\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        [\n                            'is:open',\n                            'no:assignee',\n                            'label:bug',\n                            'label:p2'\n                        ],\n                        repoFeature.todo.p2bugs\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        [\n                            'is:open',\n                            'no:assignee',\n                            'label:bug',\n                            'label:p3'\n                        ],\n                        repoFeature.todo.p3bugs\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        [\n                            'is:open',\n                            'assignee:*',\n                            'label:bug'\n                        ],\n                        repoFeature.wip.p1bugs.concat(repoFeature.wip.p2bugs).concat(repoFeature.wip.p3bugs)\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        [\n                            'is:closed',\n                            'label:bug'\n                        ],\n                        repoFeature.done.p1bugs.concat(repoFeature.done.p2bugs).concat(repoFeature.done.p3bugs)\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        ['is:open'].concat(repoFeature.todo.others.concat(repoFeature.wip.others).map(issue => issue.number)),\n                        repoFeature.todo.others.concat(repoFeature.wip.others)\n                    )\n                }</div>\n                <div className={ repoFeature.deliveryDate ? \"\" : \"NoDate\" }>{ repoFeature.deliveryDate ?\n                        dateFormat(repoFeature.deliveryDate, 'yyyy-mm-dd') :\n                    'n/a' }</div>\n                <div className=\"Completed\">{ this.calculatePercentCompleted(repoFeature) }%</div>\n            </div>\n        );\n    }\n}\n\nclass TokenInput extends Component {\n\n    handleClick(e) {\n        e.preventDefault();\n        let token = prompt('Personal github token', localStorage.getItem('github_token') || '');\n        if (token !== null) {\n            localStorage.setItem('github_token', token);\n            window.location.reload();\n        }\n    }\n\n    render() {\n        return (\n            <div className={ `TokenInput ${this.props.status}` } \n                onClick={ this.handleClick }\n                title={\n                    this.props.status === 'unauthenticated' ? 'Add a personal GitHub token to raise the limit of requests you can make to the API' :\n                    this.props.status === 'invalid-credentials' ? 'Your github token is invalid (fell back to unauthenticated access)' : ''\n                }>\n                { this.props.status === 'unauthenticated' ? 'Add ' : '' }Personal GitHub Token\n            </div>\n        );\n    }\n\n}\n\nclass FeatureTag extends Component {\n    calculatePercentCompleted(feature) {\n        let counted = ['issues', 'p1bugs'];\n\n        let completed = 0;\n        let total = 0;\n\n        for (const repoFeature of feature.repos) {\n            completed += counted.map(type => repoFeature.done[type].length).reduce((a, b) => a + b);\n            total += counted.map(type => \n                repoFeature.todo[type].length +\n                repoFeature.wip[type].length +\n                repoFeature.done[type].length).reduce((a, b) => a + b, 0);\n        }\n\n        if (total === 0) {\n            return \"~\";\n        }\n        return (completed / total * 100).toFixed(0);\n    }\n\n    render() {\n        let rows = this.props.feature.repos.map(repo => <FeatureTagRow repoFeature={ repo }\n            key={ repo.repo } />\n        );\n\n        return (\n            <div className=\"FeatureTag\">\n                <div className=\"FeatureTag-Header\">\n                    <div className=\"Label\">{ this.props.feature.label }</div>\n                    <div className=\"PercentComplete\">{ this.calculatePercentCompleted(this.props.feature) }%</div>\n                </div>\n                <div className=\"FeatureTag-Table\">\n                    <div className=\"FeatureTag-Column\"></div>\n                    <div className=\"FeatureTag-Column Implementation\"></div>\n                    <div className=\"FeatureTag-Column Implementation\"></div>\n                    <div className=\"FeatureTag-Column Implementation\"></div>\n                    <div className=\"FeatureTag-Column Bugs\"></div>\n                    <div className=\"FeatureTag-Column Bugs\"></div>\n                    <div className=\"FeatureTag-Column Bugs\"></div>\n                    <div className=\"FeatureTag-Column Bugs\"></div>\n                    <div className=\"FeatureTag-Column Bugs\"></div>\n                    <div className=\"FeatureTag-Column\"></div>\n                    <div className=\"FeatureTag-Column\"></div>\n                    <div className=\"FeatureTag-Column\"></div>\n                    <div className=\"FeatureTag-Row FeatureTag-TableHeader\">\n                        <div>Repo</div>\n                        <div><span className=\"MetaTitleHolder\"><span className=\"MetaTitle\">Planned Work</span></span>Todo</div>\n                        <div>WIP</div>\n                        <div>Done</div>\n                        <div><span className=\"MetaTitleHolder\"><span className=\"MetaTitle\">Bugs</span></span>P1</div>\n                        <div>P2</div>\n                        <div>P3</div>\n                        <div>WIP</div>\n                        <div>Fixed</div>\n                        <div>Other</div>\n                        <div>Delivery</div>\n                        <div></div>\n                    </div>\n                    { rows }\n                </div>\n                <TokenInput status={ this.props.connection.status }/>\n            </div>\n        );\n    }\n}\n\nclass App extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            feature: {\n                label: 'Loading...',\n                repos: []\n            },\n            connection: {\n                octokit: undefined,\n                status: 'connecting'\n            }\n        }\n    }\n\n    async componentDidMount() {\n        let connection = await getConnection();\n        this.setState({connection: connection });\n        if (!Array.isArray(query.repo)) {\n            query.repo = [query.repo];\n        }\n        document.title = query.label;\n        let feature = await getFeature(connection.octokit, query.label, query.repo);\n        this.setState({feature: feature}) \n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <FeatureTag feature={ this.state.feature } connection={ this.state.connection }/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}