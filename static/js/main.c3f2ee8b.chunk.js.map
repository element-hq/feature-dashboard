{"version":3,"sources":["Github.js","components/Fail.js","components/TokenInput.js","components/Plan.js","components/Summary.js","components/Burndown.js","App.js","serviceWorker.js","index.js"],"names":["Github","token","octokit","Octokit","status","connection","undefined","auth","concat","request","then","_","catch","e","name","issue","options","issues","listComments","endpoint","merge","owner","repo","number","paginate","comments","map","comment","body","unshift","join","split","completed","filter","trim","toLowerCase","startsWith","length","outstanding","labels","searchRepos","query","project","graphql","headers","authorization","console","log","searchString","label","search","issuesAndPullRequests","q","githubIssues","Issue","githubIssue","Object","classCallCheck","this","url","html_url","color","progress","title","assignees","components","repository_url","_components$slice","slice","_components$slice2","slicedToArray","type","getType","state","getState","includes","_i","_arr","priority","assignee","Fail","react_default","a","createElement","Array","props","location","pathname","match","Component","TokenInput","preventDefault","prompt","localStorage","getItem","setItem","window","reload","className","onClick","handleClick","IssueTree","_this","categories","items","renderItem","sort","sortItems","item","_categories$","unbucketed","headings","toConsumableArray","Set","buckets","forEach","heading","unbucketedItems","values","reduce","array","value","keys","bucket","key","Plan","phases","b","Number","repos","push","Plan_IssueTree","href","target","rel","some","_ref","renderLabel","states","indexOf","components_TokenInput","connectionStatus","template","deliveryDate","todo","p1bugs","p2bugs","p3bugs","others","wip","done","establishDeliveryDate","milestone","due_on","Date","Math","max","SummaryRow","repoFeature","counted","total","toFixed","login","advanced","queryString","searchUrl","assigneesFilter","getAssigneesFilter","issueNumbers","x","makeLink","dateFormat","calculatePercentCompleted","Summary","feature","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop","_iterator3","Symbol","iterator","next","err","return","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","generateSummary","rows","Summary_SummaryRow","FILL_COLORS","LINE_COLORS","Burndown","dates","openIssueCounts","closedIssueDeltas","today","tomorrow","setDate","getDate","oneYearAgo","setFullYear","getFullYear","displayedIssues","date","min","apply","created_at","day","datasets","index","start","end","closed_at","n","data","lineTension","backgroundColor","closedDate","rateSamplingDays","closedIssuesOverSamplingDays","i","closeRate","todaysDate","elapsedDays","previousBucketRemainingDays","previousBucketFractionalDays","todaysIssues","remainingDays","Infinity","lastDate","projection","ceil","pointRadius","borderColor","borderWidth","react_chartjs_2_es","scales","yAxes","stacked","ticks","App","possibleConstructorReturn","getPrototypeOf","call","onHashChange","hash","previousQuery","parseQueryFromHash","JSON","stringify","getConnection","setState","document","getIssues","path","parse","substring","isArray","_this2","es","onChange","react_router_dom","react_router","routes","_ref2","component","render","assign","exact","RedirectLegacy","_ref3","to","pathWithQuery","replace","Boolean","hostname","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3f2ee8b.chunk.js","sourcesContent":["/*\nCopyright 2019 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport Octokit from '@octokit/rest';\nimport graphql from '@octokit/graphql';\n\nclass Github {\n\n    static async getConnection(token) {\n        if (!token) {\n            return {\n                octokit: new Octokit(),\n                status: 'unauthenticated'\n            }\n        }\n\n        let connection = undefined;\n\n        let octokit = new Octokit({\n            auth: `token ${token}`\n        });\n        await octokit.request('GET /')\n            .then(_ => {\n                connection = {\n                    octokit: octokit,\n                    status: 'authenticated'\n                }\n            })\n            .catch(e => {\n                if (e.name === 'HttpError' && e.status === 401) {\n                    connection = {\n                        octokit: new Octokit(),\n                        status: 'invalid-credentials'\n                    }\n                }\n            });\n\n        return connection;\n    }\n\n    static async getTaskCount(octokit, issue) {\n        let options = octokit.issues.listComments.endpoint.merge({\n            owner: issue.owner,\n            repo: issue.repo,\n            number: issue.number\n        });\n        let comments = await octokit.paginate(options);\n        comments = comments.map(comment => comment.body);\n        comments.unshift(issue.body);\n        comments = comments.join(\"\\n\").split(/\\r?\\n/)\n        let completed = comments.filter(comment => comment.trim().toLowerCase().startsWith('- [x]')).length;\n        let outstanding = comments.filter(comment => comment.trim().startsWith('- [ ]')).length;\n        return {\n            completed: completed,\n            outstanding: outstanding\n        }\n    }\n\n    static async getFullIssues(labels, searchRepos) {\n        const query = `\n            query issueBodiesOverTime($owner: String!, $project: String!, $labels: [String!]!) {\n                repository(owner: $owner, name: $project) {\n                    issues(first: 100, labels: $labels) {\n                        edges {\n                            cursor\n                            node {\n                                number\n                                body\n                                userContentEdits(first: 100) {\n                                    edges {\n                                        node {\n                                            editedAt\n                                            diff\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }`\n        for (const repo of searchRepos) {\n            let [owner, project] = repo.split('/');\n            let issues = await graphql(query, {\n                headers: {\n                    authorization: \"token f3b7ff551d31170bef759d1a6889ee62ce5b3a83\"\n                },\n                owner: owner,\n                project: project,\n                labels: labels\n            });\n            console.log(issues);\n        }\n    }\n\n    static async getIssues(octokit, labels, searchRepos) {\n        let searchString = searchRepos.map(repo => 'repo:' + repo)\n            .join(' ') + ' ' + labels.map(label => `label:${label}`).join(' ');\n\n        const options = octokit.search.issuesAndPullRequests.endpoint.merge({\n            q: searchString\n        });\n\n        let githubIssues = await octokit.paginate(options);\n\n        return githubIssues.map(issue => new Issue(issue));\n    }\n\n}\n\nclass Issue {\n\n    constructor(githubIssue) {\n\n        this.githubIssue = githubIssue;\n        this.url = githubIssue.html_url;\n        this.labels = githubIssue.labels.map(label => {\n            return {\n                color: label.color,\n                name: label.name\n            }\n        });\n        this.progress = undefined;\n        this.title = githubIssue.title;\n        this.number = githubIssue.number;\n        this.assignees = githubIssue.assignees;\n\n        let components = githubIssue.repository_url.split('/');\n        [this.owner, this.repo] = components.slice(components.length - 2);\n\n        this.type = Issue.getType(githubIssue);\n        this.state = Issue.getState(githubIssue);\n\n    }\n\n    static getType(githubIssue) {\n        let labels = githubIssue.labels.map(label => label.name);\n        if (labels.includes('bug')) {\n            for (const priority of ['p1', 'p2', 'p3']) {\n                if (labels.includes(priority)) {\n                    return `${priority}bugs`;\n                }\n            }\n            return `p1bugs`; // If the bug isn't prioritised, counting it as P1 will encourage\n                             // prioritisation.\n        }\n        else if (labels.includes('feature') || labels.includes('enhancement')) {\n            return 'issues';\n        }\n        return 'others';\n    }\n\n    static getState(githubIssue) {\n        if (githubIssue.state === 'closed') {\n            return 'done';\n        }\n        else if (\n            githubIssue.assignees.length === 0 ||\n            githubIssue.assignee === undefined\n        ) {\n            return 'todo';\n        }\n        else {\n            return 'wip';\n        }\n    }\n\n}\n\nexport default Github;\n","/*\nCopyright 2019 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport React, { Component } from 'react';\n\nclass Fail extends Component {\n\n    render() {\n        return (\n            <pre>\n                {`\n    ▄██████████████▄▐█▄▄▄▄█▌\n    ██████▌▄▌▄▐▐▌███▌▀▀██▀▀\n    ████▄█▌▄▌▄▐▐▌▀███▄▄█▌\n    ▄▄▄▄▄██████████████\n\n    What is a \"`}\n            { Array.join(\n                this.props.location.pathname.match(/.{1,36}/g),\n                '\\n                       ')\n            }\"?\n            </pre>\n        );\n    }\n}\n\nexport default Fail;\n","/*\nCopyright 2019 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport React, { Component } from 'react';\n\nclass TokenInput extends Component {\n\n    handleClick(e) {\n        e.preventDefault();\n        let token = prompt('Personal github token', localStorage.getItem('github_token') || '');\n        if (token !== null) {\n            localStorage.setItem('github_token', token);\n            window.location.reload();\n        }\n    }\n\n    render() {\n        return (\n            <div className={ `TokenInput ${this.props.status}` } \n                onClick={ this.handleClick }\n                title={\n                    this.props.status === 'unauthenticated' ? 'Add a personal GitHub token to raise the limit of requests you can make to the API' :\n                    this.props.status === 'invalid-credentials' ? 'Your github token is invalid (fell back to unauthenticated access)' : 'Successfully connecting using personal GitHub token'\n                }>\n                { this.props.status === 'unauthenticated' ? 'Add ' : '' }Personal GitHub Token\n            </div>\n        );\n    }\n\n}\n\nexport default TokenInput;\n","/*\nCopyright 2019 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport React, { Component } from 'react';\n\nimport TokenInput from './TokenInput';\n\nclass IssueTree extends Component {\n\n    render() {\n        let categories = this.props.categories;\n        let items = this.props.items;\n        let renderItem = this.props.renderItem;\n\n        if (categories.length === 0) {\n            return (\n                <ul>\n                    { items.sort(this.props.sortItems).map(item => renderItem(item)) }\n                </ul>\n            );\n        }\n\n        let { label, sort, unbucketed } = categories[0];\n\n        let headings = [...new Set(items.filter(label).map(label))].sort(sort);\n\n        let buckets = {};\n        headings.forEach(heading => {\n            buckets[heading] = items.filter(item => label(item) === heading);\n        });\n\n        // If we're interested in issues that weren't matched by the filter,\n        // throw them into an 'unbucketed' category.\n        if (unbucketed) {\n            let unbucketedItems = items.filter(item =>\n                !Object.values(buckets).reduce((array, value) => {\n                    return array.concat(value);\n                }, []).includes(item));\n\n            if (unbucketedItems.length > 0) {\n                buckets[unbucketed] = unbucketedItems;\n            }\n        }\n\n        return (\n            Object.keys(buckets).map(bucket => {\n                if (buckets[bucket].length > 0) {\n                    return (\n                        <ul key={ bucket }>\n                            <li className=\"heading\">{ bucket }\n                                <IssueTree\n                                    categories={ categories.slice(1) }\n                                    items={ buckets[bucket] }\n                                    renderItem={ renderItem }\n                                    sortItems={ this.props.sortItems }\n                                />\n                            </li>\n                        </ul>\n                    )\n                }\n                else return null;\n            })\n        );\n    }\n}\n\n\nclass Plan extends Component {\n\n    render() {\n        let categories = [\n            {\n                label: issue => {\n                    let phases = issue.labels.filter(label => label.name.startsWith('phase:'));\n                    if (phases.length > 0) {\n                        return phases[0].name;\n                    }\n                    else return null;\n                },\n                sort: (a, b) => {\n                    return Number(a.split(\":\")[1]) - Number(b.split(\":\")[1]);\n                },\n                unbucketed: 'unphased'\n            }\n        ];\n        if (this.props.repos.length > 1) {\n            categories.push({\n                label: issue => issue.owner + '/' + issue.repo,\n            });\n        }\n        let renderLabel = (issue, label) => {\n            if (!issue.labels.some(({ name }) => name === label)) {\n                return null;\n            }\n            return <span className={'label ' + label}>\n                {` (${label})`}\n            </span>;\n        };\n        let renderItem = issue => {\n            return (\n                <li className=\"task\" key={ issue.number }>\n                    <a href={ issue.url } target=\"_blank\" rel=\"noopener noreferrer\" >{ `${issue.number} ${issue.title}` }</a>\n                    <span className={ 'state ' + issue.state }>\n                        { issue.state === 'done' ? ' (done)' : issue.state === 'wip' ? ' (in progress)' : '' }\n                    </span>\n                    { renderLabel(issue, 'blocked') }\n                </li>\n            );\n        };\n\n        let sortItems = (a, b) => {\n            let states = ['done', 'wip', 'todo'];\n            if (a.state !== b.state) {\n                return states.indexOf(a.state) - states.indexOf(b.state);\n            }\n            return a.number - b.number;\n        };\n\n        return (\n            <div className=\"Plan raised-box\">\n                <p className=\"query-labels\">{ this.props.labels.join(' ') }</p>\n                <IssueTree\n                    categories={ categories }\n                    items={ this.props.issues }\n                    renderItem={ renderItem }\n                    sortItems={ sortItems }\n                />\n                <TokenInput status={ this.props.connectionStatus }/>\n            </div>\n        )\n\n    }\n}\n\nexport default Plan;\n","/*\nCopyright 2019 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport React, { Component } from 'react';\nimport dateFormat from 'dateformat';\n\nimport TokenInput from './TokenInput';\n\nfunction template(labels, repo) {\n    return {\n        labels: labels,\n        repo: repo,\n        deliveryDate: undefined,\n        todo: {\n            issues: [],\n            p1bugs: [],\n            p2bugs: [],\n            p3bugs: [],\n            others: []\n        },\n        wip: {\n            issues: [],\n            p1bugs: [],\n            p2bugs: [],\n            p3bugs: [],\n            others: []\n        },\n        done: {\n            issues: [],\n            p1bugs: [],\n            p2bugs: [],\n            p3bugs: [],\n            others: []\n        }\n    };\n}\n\nfunction establishDeliveryDate(issue, deliveryDate) {\n    if (deliveryDate === null) {\n        return null;\n    }\n    else if (issue.milestone && issue.milestone.due_on) {\n        if (deliveryDate === undefined) {\n            return new Date(issue.milestone.due_on);\n        }\n        else {\n            return Math.max(deliveryDate, new Date(issue.milestone.due_on));\n        }\n    }\n    else {\n        return null;\n    }\n}\n\n\nfunction generateSummary(issues, labels, searchRepos) { \n    const repos = {};\n    for (const repo of searchRepos) {\n        repos[repo] = template(labels, repo);\n    }\n\n    for (const issue of issues) {\n        const repoName = `${issue.owner}/${issue.repo}`\n        const repo = repos[repoName];\n\n        repo[issue.state][issue.type].push(issue);\n        if (issue.state !== 'done' && ['issues', 'p1bugs'].includes(issue.type)) {\n            repo.deliveryDate = establishDeliveryDate(issue, repo.deliveryDate);\n        }\n\n    }\n    return {\n        labels: labels,\n        repos: Object.values(repos)\n    }\n}\n\n\nclass SummaryRow extends Component {\n    calculatePercentCompleted(repoFeature) {\n        let counted = ['issues', 'p1bugs'];\n\n        let completed = counted.map(type => repoFeature.done[type].length).reduce((a, b) => a + b);\n        let total = counted.map(type =>\n            repoFeature.todo[type].length +\n            repoFeature.wip[type].length +\n            repoFeature.done[type].length).reduce((a, b) => a + b, 0);\n\n        if (total === 0) {\n            return '~';\n        }\n        return (completed / total * 100).toFixed(0);\n    }\n\n    getAssigneesFilter(issues) {\n        let filter = [...new Set(issues.map(issue => issue.assignees.map(assignee => assignee.login))\n            .reduce((a, b) => a.concat(b), []))]\n            .map(assignee => `assignee:${assignee}`)\n            .join('+');\n        if (!filter) {\n            filter = 'no:assignee';\n        }\n        return filter;\n    }\n\n    makeLink(repo, labels, q, issues) {\n        if (issues.length === 0) {\n            return (\n                <span>0</span>\n            );\n        }\n        if (!q) {\n            q = []\n        }\n        let advanced = false;\n\n        if (q.includes('assignee:*')) {\n            /* If the list of labels includes ['assignee', '*'], we'll strip it from the\n             * list and implement our search link using github's _advanced_ search\n             * functionality instead. This is because assignee:* doesn't reliably work\n             * with regular search (or advanced), so instead we have to apply the other\n             * search criteria _and_ a list of assignee:x where x all the assignees of\n             * all the issues which have assignees. Is that clear? Good, great. */\n            q = q.filter(item => item !== 'assignee:*')\n            advanced = true;\n        }\n        q = q.concat(labels.map(label => `label:${label}`));\n\n        let queryString = q.join('+');\n\n        let searchUrl = \"\";\n        if (advanced) {\n            let assigneesFilter = this.getAssigneesFilter(issues);\n            searchUrl = `https://github.com/search?utf8=%E2%9C%93&q=repo%3A${repo}+${queryString}+${assigneesFilter}&type=Issues&ref=advsearch&l=&l=+`;\n        }\n        else {\n            searchUrl = `https://github.com/${repo}/issues?utf8=%E2%9C%93&q=${queryString}`;\n        }\n\n        let issueNumbers = issues.map(x => `#${x.number} ${x.title}`).reduce((a, b) => a.concat(b), []);\n        return (\n            <a href={ searchUrl } target=\"_blank\" rel=\"noopener noreferrer\" title={ issueNumbers.join(\"\\n\") }>\n                { issueNumbers.length }\n            </a>\n        );\n    }\n\n    render() {\n        let repoFeature = this.props.repoFeature;\n\n        return (\n            <div className=\"Summary-Row\">\n                <div><a href={ `https://github.com/${ repoFeature.repo }/issues` }>{ repoFeature.repo }</a></div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:open',\n                            'no:assignee',\n                            'label:feature'\n                        ],\n                        repoFeature.todo.issues\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:open',\n                            'assignee:*',\n                            'label:feature'\n                        ],\n                        repoFeature.wip.issues\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:closed',\n                            'label:feature'\n                        ],\n                        repoFeature.done.issues\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:open',\n                            'no:assignee',\n                            'label:bug',\n                            '-label:p2', /* Any bug not flagged as p2-5 is p1 */\n                            '-label:p3', /* This is weird, but encourages the triaging */\n                            '-label:p4', /* of unprioritised bugs. */\n                            '-label:p5'\n                        ],\n                        repoFeature.todo.p1bugs\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:open',\n                            'no:assignee',\n                            'label:bug',\n                            'label:p2'\n                        ],\n                        repoFeature.todo.p2bugs\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:open',\n                            'no:assignee',\n                            'label:bug',\n                            'label:p3'\n                        ],\n                        repoFeature.todo.p3bugs\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:open',\n                            'assignee:*',\n                            'label:bug'\n                        ],\n                        repoFeature.wip.p1bugs.concat(repoFeature.wip.p2bugs).concat(repoFeature.wip.p3bugs)\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:closed',\n                            'label:bug'\n                        ],\n                        repoFeature.done.p1bugs.concat(repoFeature.done.p2bugs).concat(repoFeature.done.p3bugs)\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        ['is:open'].concat(repoFeature.todo.others.concat(repoFeature.wip.others).map(issue => issue.number)),\n                        repoFeature.todo.others.concat(repoFeature.wip.others)\n                    )\n                }</div>\n                <div className={ repoFeature.deliveryDate ? \"\" : \"NoDate\" }>{ repoFeature.deliveryDate ?\n                        dateFormat(repoFeature.deliveryDate, 'yyyy-mm-dd') :\n                    'n/a' }</div>\n                <div className=\"Completed\">{ this.calculatePercentCompleted(repoFeature) }%</div>\n            </div>\n        );\n    }\n}\n\nclass Summary extends Component {\n    calculatePercentCompleted(feature) {\n        let counted = ['issues', 'p1bugs'];\n\n        let completed = 0;\n        let total = 0;\n\n        for (const repoFeature of feature.repos) {\n            completed += counted.map(type => repoFeature.done[type].length).reduce((a, b) => a + b);\n            total += counted.map(type => \n                repoFeature.todo[type].length +\n                repoFeature.wip[type].length +\n                repoFeature.done[type].length).reduce((a, b) => a + b, 0);\n        }\n\n        if (total === 0) {\n            return \"~\";\n        }\n        return (completed / total * 100).toFixed(0);\n    }\n\n    render() {\n        let feature = generateSummary(\n            this.props.issues,\n            this.props.labels,\n            this.props.repos\n        );\n\n        let rows = feature.repos.map(repo => <SummaryRow repoFeature={ repo }\n            key={ repo.repo } />\n        );\n\n        return (\n            <div className=\"Summary raised-box\">\n                <div className=\"Summary-Header\">\n                    <div className=\"Label\">{ feature.labels.join(' ') }</div>\n                    <div className=\"PercentComplete\">{ this.calculatePercentCompleted(feature) }%</div>\n                </div>\n                <div className=\"Summary-Table\">\n                    <div className=\"Summary-Column\"></div>\n                    <div className=\"Summary-Column Implementation\"></div>\n                    <div className=\"Summary-Column Implementation\"></div>\n                    <div className=\"Summary-Column Implementation\"></div>\n                    <div className=\"Summary-Column Bugs\"></div>\n                    <div className=\"Summary-Column Bugs\"></div>\n                    <div className=\"Summary-Column Bugs\"></div>\n                    <div className=\"Summary-Column Bugs\"></div>\n                    <div className=\"Summary-Column Bugs\"></div>\n                    <div className=\"Summary-Column\"></div>\n                    <div className=\"Summary-Column\"></div>\n                    <div className=\"Summary-Column\"></div>\n                    <div className=\"Summary-Row Summary-TableHeader\">\n                        <div>Repo</div>\n                        <div><span className=\"MetaTitleHolder\"><span className=\"MetaTitle\">Planned Work</span></span>Todo</div>\n                        <div>WIP</div>\n                        <div>Done</div>\n                        <div><span className=\"MetaTitleHolder\"><span className=\"MetaTitle\">Bugs</span></span>P1</div>\n                        <div>P2</div>\n                        <div>P3</div>\n                        <div>WIP</div>\n                        <div>Fixed</div>\n                        <div>Other</div>\n                        <div>Delivery</div>\n                        <div></div>\n                    </div>\n                    { rows }\n                </div>\n                <TokenInput status={ this.props.connectionStatus }/>\n            </div>\n        );\n    }\n}\n\nexport default Summary;\n","/*\nCopyright 2019 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport React, { Component } from 'react';\n\nimport dateFormat from 'dateformat';\nimport { Line } from 'react-chartjs-2';\n\nconst FILL_COLORS = [\n    'rgba(0, 40, 0, 0.2)',\n    'rgba(40, 0, 0, 0.2)',\n    'rgba(0, 0, 40, 0.2)',\n    'rgba(40, 40, 0, 0.2)',\n    'rgba(0, 40, 40, 0.2)',\n    'rgba(40, 0, 40, 0.2)',\n];\n\nconst LINE_COLORS = [\n    'rgba(0, 40, 0, 0.5)',\n    'rgba(40, 0, 0, 0.5)',\n    'rgba(0, 0, 40, 0.5)',\n    'rgba(40, 40, 0, 0.5)',\n    'rgba(0, 40, 40, 0.5)',\n    'rgba(40, 0, 40, 0.5)',\n];\n\nclass Burndown extends Component {\n\n    render() {\n        let { issues } = this.props;\n\n        if (issues.length === 0) {\n            return (\n                <div className=\"Burndown raised-box\">\n                    <h3>Loading data...</h3>\n                </div>\n            );\n        }\n\n        // Attempt to bucket issues by phase\n        // TODO: Extract this out as a generic issue categoriser\n        let label = issue => {\n            let phases = issue.labels.filter(label => label.name.startsWith('phase:'));\n            if (phases.length > 0) {\n                return phases[0].name;\n            }\n            return null;\n        };\n        let sort = (a, b) => {\n            return Number(a.split(\":\")[1]) - Number(b.split(\":\")[1]);\n        };\n\n        let headings = [...new Set(issues.filter(label).map(label))].sort(sort);\n        let buckets = {};\n        if (headings.length > 0) {\n            headings.forEach(heading => {\n                buckets[heading] = issues.filter(item => label(item) === heading);\n            });\n        } else {\n            buckets['unphased'] = issues;\n        }\n\n        let dates = [];\n        let openIssueCounts = {};\n        let closedIssueDeltas = {};\n\n        // Initialise dates array and issue count per day for all relevant dates\n        // Start at from creation time of the earliest issue by default\n        // Limit to one year at most\n        // TODO: URL param for custom start date?\n        let today = new Date();\n        let tomorrow = new Date().setDate(today.getDate() + 1);\n        let oneYearAgo = new Date().setFullYear(today.getFullYear() - 1);\n        let displayedIssues = Object.values(buckets).reduce((array, value) => {\n            return array.concat(value);\n        });\n        let date = new Date(\n            Math.max(\n                Math.min(\n                    ...displayedIssues.map(issue => new Date(issue.githubIssue.created_at))\n                ),\n                oneYearAgo\n            )\n        );\n        while (date < tomorrow) {\n            let day = dateFormat(date, 'yyyy-mm-dd');\n            dates.push(day);\n            openIssueCounts[day] = {};\n            closedIssueDeltas[day] = 0;\n            date.setDate(date.getDate() + 1);\n        }\n\n        let datasets = [];\n\n        // Create a dataset for each bucket\n        Object.keys(buckets).forEach((bucket, index) => {\n            // Initialise counts to 0 for this bucket for all dates\n            Object.keys(openIssueCounts).forEach(date => {\n                openIssueCounts[date][bucket] = 0;\n            });\n\n            buckets[bucket].forEach(issue => {\n                let start = Math.max(0, dates.indexOf(dateFormat(issue.githubIssue.created_at, 'yyyy-mm-dd')));\n                let end = issue.githubIssue.closed_at ? dates.indexOf(dateFormat(issue.githubIssue.closed_at, 'yyyy-mm-dd')) : dates.length;\n                for (let n = start; n < end; n++) {\n                    openIssueCounts[dates[n]][bucket] += 1;\n                }\n            });\n            datasets.push({\n                label: `Open ${bucket} issues`,\n                data: dates.map(date => openIssueCounts[date][bucket]),\n                lineTension: 0,\n                backgroundColor: FILL_COLORS[index],\n            });\n        });\n\n        // Count closed issue deltas for entire project\n        issues.forEach(issue => {\n            let { closed_at } = issue.githubIssue;\n            if (!closed_at) {\n                return;\n            }\n            let closedDate = dateFormat(closed_at, 'yyyy-mm-dd');\n            closedIssueDeltas[closedDate] += 1;\n        });\n\n        // Look back up to 2 weeks to compute average rate per day\n        let rateSamplingDays = Math.min(dates.length, 14);\n        let closedIssuesOverSamplingDays = 0;\n        for (let i = dates.length - rateSamplingDays; i < dates.length; i++) {\n            closedIssuesOverSamplingDays += closedIssueDeltas[dates[i]];\n        }\n        let closeRate = closedIssuesOverSamplingDays / rateSamplingDays;\n\n        // Attempt to project a delivery date for each bucket\n        let todaysDate = dates[dates.length - 1];\n        let elapsedDays = dates.length;\n        let previousBucketRemainingDays = 0;\n        let previousBucketFractionalDays = 0;\n        Object.keys(buckets).forEach((bucket, index) => {\n            let todaysIssues = openIssueCounts[todaysDate][bucket];\n            let remainingDays = todaysIssues / closeRate;\n\n            if (todaysIssues > 0 && remainingDays !== Infinity) {\n                // Add additional days to the date axis for the extra days\n                // needed for this bucket.\n                let lastDate = dates[dates.length - 1];\n                let date = new Date(lastDate);\n                for (let i = 0; i < remainingDays + 1; i++) {\n                    dates.push(dateFormat(date, 'yyyy-mm-dd'));\n                    date.setDate(date.getDate() + 1);\n                }\n                let projection = [];\n                for (let i = 0; i < elapsedDays; i++) {\n                    projection.push(null);\n                }\n                // Since the lines are actually stacked, we need to use a\n                // constant value for any days where a previous bucket is being\n                // depleted below this one.\n                for (let i = 0; i < previousBucketRemainingDays; i++) {\n                    projection.push(todaysIssues);\n                }\n                for (let i = previousBucketFractionalDays; i < remainingDays + 1; i++) {\n                    projection.push(todaysIssues - (i * closeRate));\n                }\n                // Store fractional days to the next date to help the next\n                // bucket stack smoothly.\n                previousBucketFractionalDays = Math.ceil(remainingDays) - remainingDays;\n\n                datasets.push({\n                    label: `Projected ${bucket} delivery`,\n                    data: projection,\n                    lineTension: 0,\n                    pointRadius: 0,\n                    borderColor: LINE_COLORS[index],\n                    borderWidth: 2,\n                    backgroundColor: FILL_COLORS[index],\n                });\n            }\n\n            previousBucketRemainingDays += remainingDays;\n        });\n\n        let data = {\n            labels: dates,\n            datasets: datasets\n        };\n        let options = {\n            scales: {\n                yAxes: [{\n                    stacked: true,\n                    ticks: {\n                        min: 0\n                    }\n                }]\n            }\n        };\n\n        return (\n            <div className=\"Burndown raised-box\">\n                <h3>{ this.props.labels.join(' ') }</h3>\n                <Line data={ data } options={ options }/>\n            </div>\n        );\n    }\n\n}\n\nexport default Burndown;\n","/*\nCopyright 2019 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport queryString from 'query-string';\nimport HashChange from 'react-hashchange';\n\nimport Github from './Github';\nimport Fail from './components/Fail';\nimport Plan from './components/Plan';\nimport Summary from './components/Summary';\nimport Burndown from './components/Burndown';\n\nimport './feature-dashboard.css';\n\nclass App extends Component {\n\n    constructor(props) {\n        super();\n        this.state = {\n            query: null,\n            issues: [],\n            repos: [],\n            labels: [],\n            connectionStatus: 'connecting'\n        }\n    }\n\n    async componentDidMount() {\n        /*\n         * FIXME: This _looks_ wrong. Why are we fiddling around parsing the location.hash\n         * when we've got a perfectly good HashRouter to do that for us?\n         */\n        if (window.location.hash.includes(\"?\")) {\n            const query = this.parseQueryFromHash(window.location.hash);\n\n            let token = localStorage.getItem('github_token');\n            let connection = await Github.getConnection(token);\n            this.setState({connectionStatus: connection.status });\n\n            document.title = query.label.join(' ');\n\n            let issues = await Github.getIssues(connection.octokit, query.label, query.repo);\n\n            this.setState({\n                query,\n                labels: query.label,\n                repos: query.repo,\n                issues: issues\n            });\n\n        }\n    }\n\n    get routes() {\n        return [\n            {\n                path: \"/summary\",\n                label: \"Summary\",\n                component: Summary,\n            },\n            {\n                path: \"/plan\",\n                label: \"Plan\",\n                component: Plan,\n            },\n            {\n                path: \"/burndown\",\n                label: \"Burndown\",\n                component: Burndown,\n            },\n        ];\n    }\n\n    pathWithQuery(path) {\n        if (!this.state.query) {\n            return path;\n        }\n        return path + \"?\" + queryString.stringify(this.state.query);\n    }\n\n    parseQueryFromHash(hash) {\n        const query = queryString.parse(hash.substring(hash.indexOf(\"?\")));\n        if (!Array.isArray(query.repo)) {\n            query.repo = [query.repo];\n        }\n        if (!Array.isArray(query.label)) {\n            query.label = [query.label];\n        }\n        return query;\n    }\n\n    onHashChange = ({ hash }) => {\n        const { query: previousQuery } = this.state;\n        // If the query param potions match, we don't need to reload, as this\n        // can be handled by switching components.\n        if (!hash.includes(\"?\") && previousQuery === null) {\n            return;\n        }\n        if (hash.includes(\"?\")) {\n            const query = this.parseQueryFromHash(hash);\n            if (JSON.stringify(previousQuery) === JSON.stringify(query)) {\n                return;\n            }\n        }\n        // Query components differ, so for now we require a reload to update.\n        window.location.reload();\n    }\n\n    render() {\n        return (\n            <div>\n                <HashChange onChange={this.onHashChange} />\n                <Router>\n                    <Switch>\n                        {this.routes.map(({ path, component: Component }) => (\n                            <Route path={path} key={path}\n                                render={props => <Component\n                                    {...props}\n                                    repos={this.state.repos}\n                                    labels={this.state.labels}\n                                    issues={this.state.issues}\n                                    connectionStatus={this.state.connectionStatus}\n                                />}\n                            />\n                        ))}\n                        <Route exact path=\"/\" component= { RedirectLegacy } />\n                        <Route component={ Fail } />\n                    </Switch>\n                    <nav className=\"raised-box\">\n                        {this.routes.map(({ path, label }) => (\n                            <Link key={path} to={this.pathWithQuery(path)}>\n                                {label}\n                            </Link>\n                        ))}\n                    </nav>\n                </Router>\n            </div>\n        );\n    }\n\n}\n\n/* \n * Legacy links to this tool just passed query params to the root:\n *\n * https://host/?repo=example-org/example-repo&...\n *\n * I want to redirect those links to the summary view, but I wasn't able to\n * make ReactRouter execute the redirect without making a mess of the query \n * params:\n *\n * https://host/?repo=... -> https://host/?repo=...#/summary\n *\n * Crucially, after the ReactRouter redirect, the query params were no longer\n * accessible to `this.props.location.search`. So instead we're taking matters\n * into our own hands and wrestling `window.location.replace` directly,\n * preserving the query params in the destination:\n *\n * https://host/?repo=... -> https://host/#/summary?repo=...\n */\nclass RedirectLegacy extends Component {\n\n    render() {\n        window.location.replace(`${window.location.pathname}#/summary${ window.location.search }`);\n        return (\n            <p>Redirecting...</p>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/*\nCopyright 2019 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}