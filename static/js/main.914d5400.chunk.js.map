{"version":3,"sources":["DashboardUtils.js","components/TokenInput.js","components/Summary.js","Github.js","components/Plan.js","components/Fail.js","App.js","serviceWorker.js","index.js"],"names":["DashboardUtils","octokit","issue","options","issues","listComments","endpoint","merge","owner","repo","number","paginate","comments","map","comment","body","unshift","join","split","completed","filter","trim","toLowerCase","startsWith","length","outstanding","deliveryDate","milestone","due_on","undefined","Date","Math","max","labels","todo","p1bugs","p2bugs","p3bugs","others","wip","done","searchRepos","repos","_iterator","Symbol","iterator","_iteratorNormalCompletion","_step","next","value","this","template","_iterator2","_iteratorNormalCompletion2","_step2","repoName","concat","state","type","push","includes","establishDeliveryDate","Object","values","TokenInput","e","preventDefault","token","prompt","localStorage","getItem","setItem","window","location","reload","react_default","a","createElement","className","props","status","onClick","handleClick","title","Component","SummaryRow","repoFeature","counted","reduce","b","total","toFixed","toConsumableArray","Set","assignees","assignee","login","q","advanced","item","queryString","label","searchUrl","assigneesFilter","getAssigneesFilter","issueNumbers","x","href","target","rel","makeLink","dateFormat","calculatePercentCompleted","Summary","feature","_didIteratorError","_iteratorError","_loop","err","return","rows","Summary_SummaryRow","key","components_TokenInput","connectionStatus","Github","Octokit","connection","auth","request","then","_","catch","name","searchString","search","issuesAndPullRequests","githubIssues","Issue","githubIssue","classCallCheck","url","color","progress","components","repository_url","_components$slice","slice","_components$slice2","slicedToArray","getType","getState","_arr","_i","priority","Plan","_this","possibleConstructorReturn","getPrototypeOf","call","console","log","Fail","Array","pathname","match","App","hash","query","parse","substring","indexOf","isArray","getConnection","setState","document","getIssues","generateSummary","_this2","es","onChange","react_router_dom","react_router","path","render","components_Summary","assign","components_Plan","exact","component","RedirectLegacy","replace","Boolean","hostname","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.914d5400.chunk.js","sourcesContent":["/* Private functions, not exposed */\n\nclass DashboardUtils {\n\n    static async getTaskCount(octokit, issue) {\n        let options = octokit.issues.listComments.endpoint.merge({\n            owner: issue.owner,\n            repo: issue.repo,\n            number: issue.number\n        });\n        let comments = await octokit.paginate(options);\n        comments = comments.map(comment => comment.body);\n        comments.unshift(issue.body);\n        comments = comments.join(\"\\n\").split(/\\r?\\n/)\n        let completed = comments.filter(comment => comment.trim().toLowerCase().startsWith('- [x]')).length;\n        let outstanding = comments.filter(comment => comment.trim().startsWith('- [ ]')).length;\n        return {\n            completed: completed,\n            outstanding: outstanding\n        }\n    }\n\n    static establishDeliveryDate(issue, deliveryDate) {\n        if (deliveryDate === null) {\n            return null;\n        }\n        else if (issue.milestone && issue.milestone.due_on) {\n            if (deliveryDate === undefined) {\n                return new Date(issue.milestone.due_on);\n            }\n            else {\n                return Math.max(deliveryDate, new Date(issue.milestone.due_on));\n            }\n        }\n        else {\n            return null;\n        }\n    }\n\n\n    static template(labels, repo) {\n        return {\n            labels: labels,\n            repo: repo,\n            deliveryDate: undefined,\n            todo: {\n                issues: [],\n                p1bugs: [],\n                p2bugs: [],\n                p3bugs: [],\n                others: []\n            },\n            wip: {\n                issues: [],\n                p1bugs: [],\n                p2bugs: [],\n                p3bugs: [],\n                others: []\n            },\n            done: {\n                issues: [],\n                p1bugs: [],\n                p2bugs: [],\n                p3bugs: [],\n                others: []\n            }\n        };\n    }\n\n\n    static async generateSummary(issues, labels, searchRepos) { //octokit, label, searchRepos) {\n        const repos = {};\n        for (const repo of searchRepos) {\n            repos[repo] = this.template(labels, repo);\n        }\n\n        for (const issue of issues) {\n            const repoName = `${issue.owner}/${issue.repo}`\n            const repo = repos[repoName];\n\n            repo[issue.state][issue.type].push(issue);\n            if (issue.state !== 'done' && ['issues', 'p1bugs'].includes(issue.type)) {\n                repo.deliveryDate = this.establishDeliveryDate(issue, repo.deliveryDate);\n            }\n\n        }\n        return {\n            labels: labels,\n            repos: Object.values(repos)\n        }\n    }\n\n}\n\nexport default DashboardUtils;\n","import React, { Component } from 'react';\n\nclass TokenInput extends Component {\n\n    handleClick(e) {\n        e.preventDefault();\n        let token = prompt('Personal github token', localStorage.getItem('github_token') || '');\n        if (token !== null) {\n            localStorage.setItem('github_token', token);\n            window.location.reload();\n        }\n    }\n\n    render() {\n        return (\n            <div className={ `TokenInput ${this.props.status}` } \n                onClick={ this.handleClick }\n                title={\n                    this.props.status === 'unauthenticated' ? 'Add a personal GitHub token to raise the limit of requests you can make to the API' :\n                    this.props.status === 'invalid-credentials' ? 'Your github token is invalid (fell back to unauthenticated access)' : ''\n                }>\n                { this.props.status === 'unauthenticated' ? 'Add ' : '' }Personal GitHub Token\n            </div>\n        );\n    }\n\n}\n\nexport default TokenInput;\n","import React, { Component } from 'react';\nimport dateFormat from 'dateformat';\n\nimport TokenInput from './TokenInput';\n\nclass SummaryRow extends Component {\n    calculatePercentCompleted(repoFeature) {\n        let counted = ['issues', 'p1bugs'];\n\n        let completed = counted.map(type => repoFeature.done[type].length).reduce((a, b) => a + b);\n        let total = counted.map(type =>\n            repoFeature.todo[type].length +\n            repoFeature.wip[type].length +\n            repoFeature.done[type].length).reduce((a, b) => a + b, 0);\n\n        if (total === 0) {\n            return '~';\n        }\n        return (completed / total * 100).toFixed(0);\n    }\n\n    getAssigneesFilter(issues) {\n        let filter = [...new Set(issues.map(issue => issue.assignees.map(assignee => assignee.login))\n            .reduce((a, b) => a.concat(b), []))]\n            .map(assignee => `assignee:${assignee}`)\n            .join('+');\n        if (!filter) {\n            filter = 'no:assignee';\n        }\n        return filter;\n    }\n\n    makeLink(repo, labels, q, issues) {\n        if (issues.length === 0) {\n            return (\n                <span>0</span>\n            );\n        }\n        if (!q) {\n            q = []\n        }\n        let advanced = false;\n\n        if (q.includes('assignee:*')) {\n            /* If the list of labels includes ['assignee', '*'], we'll strip it from the\n             * list and implement our search link using github's _advanced_ search\n             * functionality instead. This is because assignee:* doesn't reliably work\n             * with regular search (or advanced), so instead we have to apply the other\n             * search criteria _and_ a list of assignee:x where x all the assignees of\n             * all the issues which have assignees. Is that clear? Good, great. */\n            q = q.filter(item => item !== 'assignee:*')\n            advanced = true;\n        }\n        q = q.concat(labels.map(label => `label:${label}`));\n\n        let queryString = q.join('+');\n\n        let searchUrl = \"\";\n        if (advanced) {\n            let assigneesFilter = this.getAssigneesFilter(issues);\n            searchUrl = `https://github.com/search?utf8=%E2%9C%93&q=repo%3A${repo}+${queryString}+${assigneesFilter}&type=Issues&ref=advsearch&l=&l=+`;\n        }\n        else {\n            searchUrl = `https://github.com/${repo}/issues?utf8=%E2%9C%93&q=${queryString}`;\n        }\n\n        let issueNumbers = issues.map(x => `#${x.number} ${x.title}`).reduce((a, b) => a.concat(b), []);\n        return (\n            <a href={ searchUrl } target=\"_blank\" rel=\"noopener noreferrer\" title={ issueNumbers.join(\"\\n\") }>\n                { issueNumbers.length }\n            </a>\n        );\n    }\n\n    render() {\n        let repoFeature = this.props.repoFeature;\n\n        return (\n            <div className=\"Summary-Row\">\n                <div><a href={ `https://github.com/${ repoFeature.repo }/issues` }>{ repoFeature.repo }</a></div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:open',\n                            'no:assignee',\n                            'label:feature'\n                        ],\n                        repoFeature.todo.issues\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:open',\n                            'assignee:*',\n                            'label:feature'\n                        ],\n                        repoFeature.wip.issues\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:closed',\n                            'label:feature'\n                        ],\n                        repoFeature.done.issues\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:open',\n                            'no:assignee',\n                            'label:bug',\n                            '-label:p2', /* Any bug not flagged as p2-5 is p1 */\n                            '-label:p3', /* This is weird, but encourages the triaging */\n                            '-label:p4', /* of unprioritised bugs. */\n                            '-label:p5'\n                        ],\n                        repoFeature.todo.p1bugs\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:open',\n                            'no:assignee',\n                            'label:bug',\n                            'label:p2'\n                        ],\n                        repoFeature.todo.p2bugs\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:open',\n                            'no:assignee',\n                            'label:bug',\n                            'label:p3'\n                        ],\n                        repoFeature.todo.p3bugs\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:open',\n                            'assignee:*',\n                            'label:bug'\n                        ],\n                        repoFeature.wip.p1bugs.concat(repoFeature.wip.p2bugs).concat(repoFeature.wip.p3bugs)\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.labels,\n                        [\n                            'is:closed',\n                            'label:bug'\n                        ],\n                        repoFeature.done.p1bugs.concat(repoFeature.done.p2bugs).concat(repoFeature.done.p3bugs)\n                    )\n                }</div>\n                <div>{\n                    this.makeLink(\n                        repoFeature.repo,\n                        repoFeature.label,\n                        ['is:open'].concat(repoFeature.todo.others.concat(repoFeature.wip.others).map(issue => issue.number)),\n                        repoFeature.todo.others.concat(repoFeature.wip.others)\n                    )\n                }</div>\n                <div className={ repoFeature.deliveryDate ? \"\" : \"NoDate\" }>{ repoFeature.deliveryDate ?\n                        dateFormat(repoFeature.deliveryDate, 'yyyy-mm-dd') :\n                    'n/a' }</div>\n                <div className=\"Completed\">{ this.calculatePercentCompleted(repoFeature) }%</div>\n            </div>\n        );\n    }\n}\n\nclass Summary extends Component {\n    calculatePercentCompleted(feature) {\n        let counted = ['issues', 'p1bugs'];\n\n        let completed = 0;\n        let total = 0;\n\n        for (const repoFeature of feature.repos) {\n            completed += counted.map(type => repoFeature.done[type].length).reduce((a, b) => a + b);\n            total += counted.map(type => \n                repoFeature.todo[type].length +\n                repoFeature.wip[type].length +\n                repoFeature.done[type].length).reduce((a, b) => a + b, 0);\n        }\n\n        if (total === 0) {\n            return \"~\";\n        }\n        return (completed / total * 100).toFixed(0);\n    }\n\n    render() {\n        let rows = this.props.feature.repos.map(repo => <SummaryRow repoFeature={ repo }\n            key={ repo.repo } />\n        );\n\n        return (\n            <div className=\"Summary\">\n                <div className=\"Summary-Header\">\n                    <div className=\"Label\">{ this.props.feature.labels.join(' ') }</div>\n                    <div className=\"PercentComplete\">{ this.calculatePercentCompleted(this.props.feature) }%</div>\n                </div>\n                <div className=\"Summary-Table\">\n                    <div className=\"Summary-Column\"></div>\n                    <div className=\"Summary-Column Implementation\"></div>\n                    <div className=\"Summary-Column Implementation\"></div>\n                    <div className=\"Summary-Column Implementation\"></div>\n                    <div className=\"Summary-Column Bugs\"></div>\n                    <div className=\"Summary-Column Bugs\"></div>\n                    <div className=\"Summary-Column Bugs\"></div>\n                    <div className=\"Summary-Column Bugs\"></div>\n                    <div className=\"Summary-Column Bugs\"></div>\n                    <div className=\"Summary-Column\"></div>\n                    <div className=\"Summary-Column\"></div>\n                    <div className=\"Summary-Column\"></div>\n                    <div className=\"Summary-Row Summary-TableHeader\">\n                        <div>Repo</div>\n                        <div><span className=\"MetaTitleHolder\"><span className=\"MetaTitle\">Planned Work</span></span>Todo</div>\n                        <div>WIP</div>\n                        <div>Done</div>\n                        <div><span className=\"MetaTitleHolder\"><span className=\"MetaTitle\">Bugs</span></span>P1</div>\n                        <div>P2</div>\n                        <div>P3</div>\n                        <div>WIP</div>\n                        <div>Fixed</div>\n                        <div>Other</div>\n                        <div>Delivery</div>\n                        <div></div>\n                    </div>\n                    { rows }\n                </div>\n                <TokenInput status={ this.props.connectionStatus }/>\n            </div>\n        );\n    }\n}\n\nexport default Summary;\n","import Octokit from '@octokit/rest';\n\nclass Github {\n\n    static async getConnection(token) {\n        /* let token = localStorage.getItem('github_token'); */\n\n        if (!token) {\n            return {\n                octokit: new Octokit(),\n                status: 'unauthenticated'\n            }\n        }\n\n        let connection = undefined;\n\n        let octokit = new Octokit({\n            auth: `token ${token}`\n        });\n        await octokit.request('GET /')\n            .then(_ => {\n                connection = {\n                    octokit: octokit,\n                    status: 'authenticated'\n                }\n            })\n            .catch(e => {\n                if (e.name === 'HttpError' && e.status === 401) {\n                    connection = {\n                        octokit: new Octokit(),\n                        status: 'invalid-credentials'\n                    }\n                }\n            });\n\n        return connection;\n    }\n\n    static async getIssues(octokit, labels, searchRepos) {\n        let searchString = searchRepos.map(repo => 'repo:' + repo)\n            .join(' ') + ' ' + labels.map(label => `label:${label}`).join(' ') + ' is:issue';\n\n        const options = octokit.search.issuesAndPullRequests.endpoint.merge({\n            q: searchString\n        });\n\n        let githubIssues = await octokit.paginate(options);\n\n        return githubIssues.map(issue => new Issue(issue));\n    }\n\n}\n\nclass Issue {\n\n    constructor(githubIssue) {\n\n        this.githubIssue = githubIssue;\n        this.url = githubIssue.url;\n        this.labels = githubIssue.labels.map(label => {\n            return {\n                color: label.color,\n                name: label.name\n            }\n        });\n        this.progress = undefined;\n        this.title = githubIssue.title;\n        this.number = githubIssue.number;\n        this.assignees = githubIssue.assignees;\n\n        let components = githubIssue.repository_url.split('/');\n        [this.owner, this.repo] = components.slice(components.length - 2);\n\n        this.type = Issue.getType(githubIssue);\n        this.state = Issue.getState(githubIssue);\n\n    }\n\n    static getType(githubIssue) {\n        let labels = githubIssue.labels.map(label => label.name);\n        if (labels.includes('bug')) {\n            for (const priority of ['p1', 'p2', 'p3']) {\n                if (labels.includes(priority)) {\n                    return `${priority}bugs`;\n                }\n            }\n            return `p1bugs`; // If the bug isn't prioritised, counting it as P1 will encourage\n                             // prioritisation.\n        }\n        else if (labels.includes('feature') || labels.includes('enhancement')) {\n            return 'issues';\n        }\n        return 'others';\n    }\n\n    static getState(githubIssue) {\n        if (githubIssue.state === 'closed') {\n            return 'done';\n        }\n        else if (githubIssue.state === 'open' && (\n                githubIssue.assignees.length === 0 ||\n                githubIssue.assignee === undefined)\n        ) {\n            return 'todo';\n        }\n        else {\n            return 'wip';\n        }\n    }\n\n}\n\nexport default Github;\n","import React, { Component } from 'react';\n// import DashboardUtils from '../DashboardUtils';\n\n\nclass Plan extends Component {\n\n    constructor(props) {\n        super();\n        this.state = {\n            feature: {\n                label: 'Loading...',\n                repos: []\n            },\n            connection: {\n                octokit: undefined,\n                status: 'connecting'\n            }\n        }\n    }\n\n    render() {\n        console.log(this.props);\n        return (\n        this.props.feature.repos.map(repo => (\n            <div>\n                <h3 key={ repo.repo }>{ repo.repo }</h3>\n                {\n                    repo.todo.concat(repo.wip)\n                    .concat(repo.done)\n                    .map(issue => (<div key={ issue.number }>{ issue }</div>\n                    ))\n                }\n            </div>\n            ))\n        );\n    }\n\n}\n\nexport default Plan;\n","import React, { Component } from 'react';\n\nclass Fail extends Component {\n\n    render() {\n        return (\n            <pre>\n                {`\n    ▄██████████████▄▐█▄▄▄▄█▌\n    ██████▌▄▌▄▐▐▌███▌▀▀██▀▀\n    ████▄█▌▄▌▄▐▐▌▀███▄▄█▌\n    ▄▄▄▄▄██████████████\n\n    Please what means \"`}\n            { Array.join(\n                this.props.location.pathname.match(/.{1,36}/g),\n                '\\n                       ')\n            }\"?\n            </pre>\n        );\n    }\n}\n\nexport default Fail;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport queryString from 'query-string';\nimport HashChange from 'react-hashchange';\n\nimport DashboardUtils from './DashboardUtils';\nimport Summary from './components/Summary';\nimport Github from './Github';\nimport Plan from './components/Plan';\nimport Fail from './components/Fail';\nimport './feature-dashboard.css';\n\nclass App extends Component {\n\n    constructor(props) {\n        super();\n        this.state = {\n            feature: {\n                labels: ['Loading...'],\n                repos: []\n            },\n            connectionStatus: 'connecting'\n        }\n    }\n\n    async componentDidMount() {\n        /*\n         * FIXME: This _looks_ wrong. Why are we fiddling around parsing the location.hash\n         * when we've got a perfectly good HashRouter to do that for us?\n         */\n        if (window.location.hash.includes(\"?\")) {\n            let query = queryString.parse(\n                window.location.hash.substring(\n                    window.location.hash.indexOf(\"?\")\n                )\n            )\n            if (!Array.isArray(query.repo)) {\n                query.repo = [query.repo];\n            }\n            if (!Array.isArray(query.label)) {\n                query.label = [query.label];\n            }\n\n            let connection = await Github.getConnection();\n            this.setState({connectionStatus: connection.status });\n\n            document.title = query.label.join(' ');\n\n            let feature = await DashboardUtils.generateSummary(\n                await Github.getIssues(connection.octokit, query.label, query.repo),\n                query.label, query.repo\n            );\n            this.setState({feature: feature})\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <HashChange onChange={hash => {\n                    window.location.reload();\n                }} />\n                <Router>\n                    <Switch>\n                        <Route path=\"/summary\"\n                            render={ props => <Summary \n                                { ...props }\n                                feature={ this.state.feature }\n                                connectionStatus={ this.state.connectionStatus }\n                            /> }\n                        />\n                        <Route path=\"/plan\" \n                            render={ props => <Plan \n                                { ...props }\n                                feature={ this.state.feature }\n                                connectionStatus={ this.state.connectionStatus }\n                            /> }\n                        />\n                        <Route exact path=\"/\" component= { RedirectLegacy } />\n                        <Route component={ Fail } />\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n\n}\n\n/* \n * Legacy links to this tool just passed query params to the root:\n *\n * http://host/?repo=example-org/example-repo&...\n *\n * I want to redirect those links to the summary view, but I wasn't able to\n * make ReactRouter execute the redirect without making a mess of the query \n * params:\n *\n * http://host/?repo=... -> http://host/?repo=...#/summary\n *\n * Crucially, after the ReactRouter redirect, the query params were no longer\n * accessible to `this.props.location.search`. So instead we're taking matters\n * into our own hands and wrestling `window.location.replace` directly,\n * preserving the query params in the destination:\n *\n * http://host/?repo=... -> https://host/#/summary?repo=...\n */\nclass RedirectLegacy extends Component {\n\n    render() {\n        window.location.replace(`${window.location.pathname}#/summary${ window.location.search }`);\n        return (\n            <p>Redirecting...</p>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}